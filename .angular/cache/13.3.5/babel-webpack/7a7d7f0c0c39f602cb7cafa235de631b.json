{"ast":null,"code":"import { Directive, ElementRef, Input, TemplateRef, Injectable, ɵɵdefineInjectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, NgZone, Optional, Inject, Output, ViewChild, HostListener, InjectionToken, forwardRef, Attribute, ChangeDetectorRef, HostBinding, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntil, auditTime, startWith, tap, debounceTime, filter, map } from 'rxjs/operators';\nimport { animationFrameScheduler, asapScheduler, Subject, fromEvent, merge } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/value-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nconst _c0 = [\"content\"];\nconst _c1 = [\"scroll\"];\nconst _c2 = [\"padding\"];\n\nconst _c3 = function (a0) {\n  return {\n    searchTerm: a0\n  };\n};\n\nfunction NgDropdownPanelComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r0.filterValue));\n  }\n}\n\nfunction NgDropdownPanelComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.footerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r4.filterValue));\n  }\n}\n\nconst _c4 = [\"*\"];\nconst _c5 = [\"searchInput\"];\n\nfunction NgSelectComponent_ng_container_4_div_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function NgSelectComponent_ng_container_4_div_1_ng_template_1_Template_span_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const item_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.unselect(item_r7);\n    });\n    ɵngcc0.ɵɵtext(1, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(2, \"span\", 16);\n  }\n\n  if (rf & 2) {\n    const item_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngItemLabel\", item_r7.label)(\"escape\", ctx_r9.escapeHTML);\n  }\n}\n\nfunction NgSelectComponent_ng_container_4_div_1_ng_template_3_Template(rf, ctx) {}\n\nconst _c6 = function (a0, a1, a2) {\n  return {\n    item: a0,\n    clear: a1,\n    label: a2\n  };\n};\n\nfunction NgSelectComponent_ng_container_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_container_4_div_1_ng_template_1_Template, 3, 2, \"ng-template\", null, 13, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_container_4_div_1_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n\n    const _r8 = ɵngcc0.ɵɵreference(2);\n\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ng-value-disabled\", item_r7.disabled);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.labelTemplate || _r8)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(4, _c6, item_r7.value, ctx_r6.clearItem, item_r7.label));\n  }\n}\n\nfunction NgSelectComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_container_4_div_1_Template, 4, 8, \"div\", 11);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.selectedItems)(\"ngForTrackBy\", ctx_r0.trackByOption);\n  }\n}\n\nfunction NgSelectComponent_5_ng_template_0_Template(rf, ctx) {}\n\nconst _c7 = function (a0, a1) {\n  return {\n    items: a0,\n    clear: a1\n  };\n};\n\nfunction NgSelectComponent_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgSelectComponent_5_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.multiLabelTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c7, ctx_r1.selectedValues, ctx_r1.clearItem));\n  }\n}\n\nfunction NgSelectComponent_ng_container_9_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 19);\n  }\n}\n\nfunction NgSelectComponent_ng_container_9_ng_template_3_Template(rf, ctx) {}\n\nfunction NgSelectComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_container_9_ng_template_1_Template, 1, 0, \"ng-template\", null, 17, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_container_9_ng_template_3_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r16 = ɵngcc0.ɵɵreference(2);\n\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.loadingSpinnerTemplate || _r16);\n  }\n}\n\nfunction NgSelectComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 20)(1, \"span\", 21);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r4.clearAllText);\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 27);\n  }\n\n  if (rf & 2) {\n    const item_r24 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r26 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngItemLabel\", item_r24.label)(\"escape\", ctx_r26.escapeHTML);\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_3_Template(rf, ctx) {}\n\nconst _c8 = function (a0, a1, a2, a3) {\n  return {\n    item: a0,\n    item$: a1,\n    index: a2,\n    searchTerm: a3\n  };\n};\n\nfunction NgSelectComponent_ng_dropdown_panel_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25);\n    ɵngcc0.ɵɵlistener(\"click\", function NgSelectComponent_ng_dropdown_panel_13_div_2_Template_div_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r30);\n      const item_r24 = restoredCtx.$implicit;\n      const ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r29.toggleItem(item_r24);\n    })(\"mouseover\", function NgSelectComponent_ng_dropdown_panel_13_div_2_Template_div_mouseover_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r30);\n      const item_r24 = restoredCtx.$implicit;\n      const ctx_r31 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r31.onItemHover(item_r24);\n    });\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_1_Template, 1, 2, \"ng-template\", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r24 = ctx.$implicit;\n\n    const _r25 = ɵngcc0.ɵɵreference(2);\n\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ng-option-disabled\", item_r24.disabled)(\"ng-option-selected\", item_r24.selected)(\"ng-optgroup\", item_r24.children)(\"ng-option\", !item_r24.children)(\"ng-option-child\", !!item_r24.parent)(\"ng-option-marked\", item_r24 === ctx_r19.itemsList.markedItem);\n    ɵngcc0.ɵɵattribute(\"role\", item_r24.children ? \"group\" : \"option\")(\"aria-selected\", item_r24.selected)(\"id\", item_r24 == null ? null : item_r24.htmlId);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", item_r24.children ? ctx_r19.optgroupTemplate || _r25 : ctx_r19.optionTemplate || _r25)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(17, _c8, item_r24.value, item_r24, item_r24.index, ctx_r19.searchTerm));\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\")(1, \"span\", 30);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r33 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r33.addTagText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\\"\", ctx_r33.searchTerm, \"\\\"\");\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_3_Template(rf, ctx) {}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵlistener(\"mouseover\", function NgSelectComponent_ng_dropdown_panel_13_div_3_Template_div_mouseover_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r36);\n      const ctx_r35 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r35.itemsList.unmarkItem();\n    })(\"click\", function NgSelectComponent_ng_dropdown_panel_13_div_3_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r36);\n      const ctx_r37 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r37.selectTag();\n    });\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_1_Template, 4, 2, \"ng-template\", null, 29, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r32 = ɵngcc0.ɵɵreference(2);\n\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ng-option-marked\", !ctx_r20.itemsList.markedItem);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r20.tagTemplate || _r32)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(4, _c3, ctx_r20.searchTerm));\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r39 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r39.notFoundText);\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_3_Template(rf, ctx) {}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_1_Template, 2, 1, \"ng-template\", null, 31, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r38 = ɵngcc0.ɵɵreference(2);\n\n    const ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r21.notFoundTemplate || _r38)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r21.searchTerm));\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r42 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r42.typeToSearchText);\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_3_Template(rf, ctx) {}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_1_Template, 2, 1, \"ng-template\", null, 33, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_3_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r41 = ɵngcc0.ɵɵreference(2);\n\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r22.typeToSearchTemplate || _r41);\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r45 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r45.loadingText);\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_3_Template(rf, ctx) {}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_1_Template, 2, 1, \"ng-template\", null, 34, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r44 = ɵngcc0.ɵɵreference(2);\n\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r23.loadingTextTemplate || _r44)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r23.searchTerm));\n  }\n}\n\nfunction NgSelectComponent_ng_dropdown_panel_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ng-dropdown-panel\", 22);\n    ɵngcc0.ɵɵlistener(\"update\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_update_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r48);\n      const ctx_r47 = ɵngcc0.ɵɵnextContext();\n      return ctx_r47.viewPortItems = $event;\n    })(\"scroll\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_scroll_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r48);\n      const ctx_r49 = ɵngcc0.ɵɵnextContext();\n      return ctx_r49.scroll.emit($event);\n    })(\"scrollToEnd\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_scrollToEnd_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r48);\n      const ctx_r50 = ɵngcc0.ɵɵnextContext();\n      return ctx_r50.scrollToEnd.emit($event);\n    })(\"outsideClick\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_outsideClick_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r48);\n      const ctx_r51 = ɵngcc0.ɵɵnextContext();\n      return ctx_r51.close();\n    });\n    ɵngcc0.ɵɵelementContainerStart(1);\n    ɵngcc0.ɵɵtemplate(2, NgSelectComponent_ng_dropdown_panel_13_div_2_Template, 4, 22, \"div\", 23);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_div_3_Template, 4, 6, \"div\", 24);\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵtemplate(4, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_Template, 4, 4, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(5, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_Template, 4, 1, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(6, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_Template, 4, 4, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ng-select-multiple\", ctx_r5.multiple);\n    ɵngcc0.ɵɵproperty(\"virtualScroll\", ctx_r5.virtualScroll)(\"bufferAmount\", ctx_r5.bufferAmount)(\"appendTo\", ctx_r5.appendTo)(\"position\", ctx_r5.dropdownPosition)(\"headerTemplate\", ctx_r5.headerTemplate)(\"footerTemplate\", ctx_r5.footerTemplate)(\"filterValue\", ctx_r5.searchTerm)(\"items\", ctx_r5.itemsList.filteredItems)(\"markedItem\", ctx_r5.itemsList.markedItem)(\"ngClass\", ctx_r5.appendTo ? ctx_r5.classes : null)(\"id\", ctx_r5.dropdownId);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.viewPortItems)(\"ngForTrackBy\", ctx_r5.trackByOption);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.showAddTag);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.showNoItemsFound());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.showTypeToSearch());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.loading && ctx_r5.itemsList.filteredItems.length === 0);\n  }\n}\n\nconst unescapedHTMLExp = /[&<>\"']/g;\n/** @type {?} */\n\nconst hasUnescapedHTMLExp = RegExp(unescapedHTMLExp.source);\n/** @type {?} */\n\nconst htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n/**\n * @param {?} string\n * @return {?}\n */\n\nfunction escapeHTML(string) {\n  return string && hasUnescapedHTMLExp.test(string) ? string.replace(unescapedHTMLExp,\n  /**\n  * @param {?} chr\n  * @return {?}\n  */\n  chr => htmlEscapes[chr]) : string;\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isObject(value) {\n  return typeof value === 'object' && isDefined(value);\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isPromise(value) {\n  return value instanceof Promise;\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isFunction(value) {\n  return value instanceof Function;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ng-templates.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet NgItemLabelDirective = /*#__PURE__*/(() => {\n  class NgItemLabelDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n      this.element = element;\n      this.escape = true;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      this.element.nativeElement.innerHTML = this.escape ? escapeHTML(this.ngItemLabel) : this.ngItemLabel;\n    }\n\n  }\n\n  NgItemLabelDirective.ɵfac = function NgItemLabelDirective_Factory(t) {\n    return new (t || NgItemLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NgItemLabelDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgItemLabelDirective,\n    selectors: [[\"\", \"ngItemLabel\", \"\"]],\n    inputs: {\n      escape: \"escape\",\n      ngItemLabel: \"ngItemLabel\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  /** @nocollapse */\n\n  return NgItemLabelDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgItemLabelDirective.prototype.ngItemLabel;\n  /** @type {?} */\n\n  NgItemLabelDirective.prototype.escape;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgItemLabelDirective.prototype.element;\n}\n\nlet NgOptionTemplateDirective = /*#__PURE__*/(() => {\n  class NgOptionTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgOptionTemplateDirective.ɵfac = function NgOptionTemplateDirective_Factory(t) {\n    return new (t || NgOptionTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgOptionTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgOptionTemplateDirective,\n    selectors: [[\"\", \"ng-option-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgOptionTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgOptionTemplateDirective.prototype.template;\n}\n\nlet NgOptgroupTemplateDirective = /*#__PURE__*/(() => {\n  class NgOptgroupTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgOptgroupTemplateDirective.ɵfac = function NgOptgroupTemplateDirective_Factory(t) {\n    return new (t || NgOptgroupTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgOptgroupTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgOptgroupTemplateDirective,\n    selectors: [[\"\", \"ng-optgroup-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgOptgroupTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgOptgroupTemplateDirective.prototype.template;\n}\n\nlet NgLabelTemplateDirective = /*#__PURE__*/(() => {\n  class NgLabelTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgLabelTemplateDirective.ɵfac = function NgLabelTemplateDirective_Factory(t) {\n    return new (t || NgLabelTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgLabelTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgLabelTemplateDirective,\n    selectors: [[\"\", \"ng-label-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgLabelTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgLabelTemplateDirective.prototype.template;\n}\n\nlet NgMultiLabelTemplateDirective = /*#__PURE__*/(() => {\n  class NgMultiLabelTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgMultiLabelTemplateDirective.ɵfac = function NgMultiLabelTemplateDirective_Factory(t) {\n    return new (t || NgMultiLabelTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgMultiLabelTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgMultiLabelTemplateDirective,\n    selectors: [[\"\", \"ng-multi-label-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgMultiLabelTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgMultiLabelTemplateDirective.prototype.template;\n}\n\nlet NgHeaderTemplateDirective = /*#__PURE__*/(() => {\n  class NgHeaderTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgHeaderTemplateDirective.ɵfac = function NgHeaderTemplateDirective_Factory(t) {\n    return new (t || NgHeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgHeaderTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgHeaderTemplateDirective,\n    selectors: [[\"\", \"ng-header-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgHeaderTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgHeaderTemplateDirective.prototype.template;\n}\n\nlet NgFooterTemplateDirective = /*#__PURE__*/(() => {\n  class NgFooterTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgFooterTemplateDirective.ɵfac = function NgFooterTemplateDirective_Factory(t) {\n    return new (t || NgFooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgFooterTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgFooterTemplateDirective,\n    selectors: [[\"\", \"ng-footer-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgFooterTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgFooterTemplateDirective.prototype.template;\n}\n\nlet NgNotFoundTemplateDirective = /*#__PURE__*/(() => {\n  class NgNotFoundTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgNotFoundTemplateDirective.ɵfac = function NgNotFoundTemplateDirective_Factory(t) {\n    return new (t || NgNotFoundTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgNotFoundTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgNotFoundTemplateDirective,\n    selectors: [[\"\", \"ng-notfound-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgNotFoundTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgNotFoundTemplateDirective.prototype.template;\n}\n\nlet NgTypeToSearchTemplateDirective = /*#__PURE__*/(() => {\n  class NgTypeToSearchTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgTypeToSearchTemplateDirective.ɵfac = function NgTypeToSearchTemplateDirective_Factory(t) {\n    return new (t || NgTypeToSearchTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgTypeToSearchTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgTypeToSearchTemplateDirective,\n    selectors: [[\"\", \"ng-typetosearch-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgTypeToSearchTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgTypeToSearchTemplateDirective.prototype.template;\n}\n\nlet NgLoadingTextTemplateDirective = /*#__PURE__*/(() => {\n  class NgLoadingTextTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgLoadingTextTemplateDirective.ɵfac = function NgLoadingTextTemplateDirective_Factory(t) {\n    return new (t || NgLoadingTextTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgLoadingTextTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgLoadingTextTemplateDirective,\n    selectors: [[\"\", \"ng-loadingtext-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgLoadingTextTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgLoadingTextTemplateDirective.prototype.template;\n}\n\nlet NgTagTemplateDirective = /*#__PURE__*/(() => {\n  class NgTagTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgTagTemplateDirective.ɵfac = function NgTagTemplateDirective_Factory(t) {\n    return new (t || NgTagTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgTagTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgTagTemplateDirective,\n    selectors: [[\"\", \"ng-tag-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgTagTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgTagTemplateDirective.prototype.template;\n}\n\nlet NgLoadingSpinnerTemplateDirective = /*#__PURE__*/(() => {\n  class NgLoadingSpinnerTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n      this.template = template;\n    }\n\n  }\n\n  NgLoadingSpinnerTemplateDirective.ɵfac = function NgLoadingSpinnerTemplateDirective_Factory(t) {\n    return new (t || NgLoadingSpinnerTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NgLoadingSpinnerTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgLoadingSpinnerTemplateDirective,\n    selectors: [[\"\", \"ng-loadingspinner-tmp\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return NgLoadingSpinnerTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgLoadingSpinnerTemplateDirective.prototype.template;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/console.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet ConsoleService = /*#__PURE__*/(() => {\n  class ConsoleService {\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    warn(message) {\n      console.warn(message);\n    }\n\n  }\n\n  ConsoleService.ɵfac = function ConsoleService_Factory(t) {\n    return new (t || ConsoleService)();\n  };\n  /** @nocollapse */\n\n\n  ConsoleService.ɵprov = ɵɵdefineInjectable({\n    factory: function ConsoleService_Factory() {\n      return new ConsoleService();\n    },\n    token: ConsoleService,\n    providedIn: \"root\"\n  });\n  return ConsoleService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/id.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction newId() {\n  // First character is an 'a', it's good practice to tag id to begin with a letter\n  return 'axxxxxxxxxxx'.replace(/[x]/g,\n  /**\n  * @param {?} _\n  * @return {?}\n  */\n  function (_) {\n    // tslint:disable-next-line:no-bitwise\n\n    /** @type {?} */\n    const val = Math.random() * 16 | 0;\n    return val.toString(16);\n  });\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/search-helper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst diacritics = {\n  '\\u24B6': 'A',\n  '\\uFF21': 'A',\n  '\\u00C0': 'A',\n  '\\u00C1': 'A',\n  '\\u00C2': 'A',\n  '\\u1EA6': 'A',\n  '\\u1EA4': 'A',\n  '\\u1EAA': 'A',\n  '\\u1EA8': 'A',\n  '\\u00C3': 'A',\n  '\\u0100': 'A',\n  '\\u0102': 'A',\n  '\\u1EB0': 'A',\n  '\\u1EAE': 'A',\n  '\\u1EB4': 'A',\n  '\\u1EB2': 'A',\n  '\\u0226': 'A',\n  '\\u01E0': 'A',\n  '\\u00C4': 'A',\n  '\\u01DE': 'A',\n  '\\u1EA2': 'A',\n  '\\u00C5': 'A',\n  '\\u01FA': 'A',\n  '\\u01CD': 'A',\n  '\\u0200': 'A',\n  '\\u0202': 'A',\n  '\\u1EA0': 'A',\n  '\\u1EAC': 'A',\n  '\\u1EB6': 'A',\n  '\\u1E00': 'A',\n  '\\u0104': 'A',\n  '\\u023A': 'A',\n  '\\u2C6F': 'A',\n  '\\uA732': 'AA',\n  '\\u00C6': 'AE',\n  '\\u01FC': 'AE',\n  '\\u01E2': 'AE',\n  '\\uA734': 'AO',\n  '\\uA736': 'AU',\n  '\\uA738': 'AV',\n  '\\uA73A': 'AV',\n  '\\uA73C': 'AY',\n  '\\u24B7': 'B',\n  '\\uFF22': 'B',\n  '\\u1E02': 'B',\n  '\\u1E04': 'B',\n  '\\u1E06': 'B',\n  '\\u0243': 'B',\n  '\\u0182': 'B',\n  '\\u0181': 'B',\n  '\\u24B8': 'C',\n  '\\uFF23': 'C',\n  '\\u0106': 'C',\n  '\\u0108': 'C',\n  '\\u010A': 'C',\n  '\\u010C': 'C',\n  '\\u00C7': 'C',\n  '\\u1E08': 'C',\n  '\\u0187': 'C',\n  '\\u023B': 'C',\n  '\\uA73E': 'C',\n  '\\u24B9': 'D',\n  '\\uFF24': 'D',\n  '\\u1E0A': 'D',\n  '\\u010E': 'D',\n  '\\u1E0C': 'D',\n  '\\u1E10': 'D',\n  '\\u1E12': 'D',\n  '\\u1E0E': 'D',\n  '\\u0110': 'D',\n  '\\u018B': 'D',\n  '\\u018A': 'D',\n  '\\u0189': 'D',\n  '\\uA779': 'D',\n  '\\u01F1': 'DZ',\n  '\\u01C4': 'DZ',\n  '\\u01F2': 'Dz',\n  '\\u01C5': 'Dz',\n  '\\u24BA': 'E',\n  '\\uFF25': 'E',\n  '\\u00C8': 'E',\n  '\\u00C9': 'E',\n  '\\u00CA': 'E',\n  '\\u1EC0': 'E',\n  '\\u1EBE': 'E',\n  '\\u1EC4': 'E',\n  '\\u1EC2': 'E',\n  '\\u1EBC': 'E',\n  '\\u0112': 'E',\n  '\\u1E14': 'E',\n  '\\u1E16': 'E',\n  '\\u0114': 'E',\n  '\\u0116': 'E',\n  '\\u00CB': 'E',\n  '\\u1EBA': 'E',\n  '\\u011A': 'E',\n  '\\u0204': 'E',\n  '\\u0206': 'E',\n  '\\u1EB8': 'E',\n  '\\u1EC6': 'E',\n  '\\u0228': 'E',\n  '\\u1E1C': 'E',\n  '\\u0118': 'E',\n  '\\u1E18': 'E',\n  '\\u1E1A': 'E',\n  '\\u0190': 'E',\n  '\\u018E': 'E',\n  '\\u24BB': 'F',\n  '\\uFF26': 'F',\n  '\\u1E1E': 'F',\n  '\\u0191': 'F',\n  '\\uA77B': 'F',\n  '\\u24BC': 'G',\n  '\\uFF27': 'G',\n  '\\u01F4': 'G',\n  '\\u011C': 'G',\n  '\\u1E20': 'G',\n  '\\u011E': 'G',\n  '\\u0120': 'G',\n  '\\u01E6': 'G',\n  '\\u0122': 'G',\n  '\\u01E4': 'G',\n  '\\u0193': 'G',\n  '\\uA7A0': 'G',\n  '\\uA77D': 'G',\n  '\\uA77E': 'G',\n  '\\u24BD': 'H',\n  '\\uFF28': 'H',\n  '\\u0124': 'H',\n  '\\u1E22': 'H',\n  '\\u1E26': 'H',\n  '\\u021E': 'H',\n  '\\u1E24': 'H',\n  '\\u1E28': 'H',\n  '\\u1E2A': 'H',\n  '\\u0126': 'H',\n  '\\u2C67': 'H',\n  '\\u2C75': 'H',\n  '\\uA78D': 'H',\n  '\\u24BE': 'I',\n  '\\uFF29': 'I',\n  '\\u00CC': 'I',\n  '\\u00CD': 'I',\n  '\\u00CE': 'I',\n  '\\u0128': 'I',\n  '\\u012A': 'I',\n  '\\u012C': 'I',\n  '\\u0130': 'I',\n  '\\u00CF': 'I',\n  '\\u1E2E': 'I',\n  '\\u1EC8': 'I',\n  '\\u01CF': 'I',\n  '\\u0208': 'I',\n  '\\u020A': 'I',\n  '\\u1ECA': 'I',\n  '\\u012E': 'I',\n  '\\u1E2C': 'I',\n  '\\u0197': 'I',\n  '\\u24BF': 'J',\n  '\\uFF2A': 'J',\n  '\\u0134': 'J',\n  '\\u0248': 'J',\n  '\\u24C0': 'K',\n  '\\uFF2B': 'K',\n  '\\u1E30': 'K',\n  '\\u01E8': 'K',\n  '\\u1E32': 'K',\n  '\\u0136': 'K',\n  '\\u1E34': 'K',\n  '\\u0198': 'K',\n  '\\u2C69': 'K',\n  '\\uA740': 'K',\n  '\\uA742': 'K',\n  '\\uA744': 'K',\n  '\\uA7A2': 'K',\n  '\\u24C1': 'L',\n  '\\uFF2C': 'L',\n  '\\u013F': 'L',\n  '\\u0139': 'L',\n  '\\u013D': 'L',\n  '\\u1E36': 'L',\n  '\\u1E38': 'L',\n  '\\u013B': 'L',\n  '\\u1E3C': 'L',\n  '\\u1E3A': 'L',\n  '\\u0141': 'L',\n  '\\u023D': 'L',\n  '\\u2C62': 'L',\n  '\\u2C60': 'L',\n  '\\uA748': 'L',\n  '\\uA746': 'L',\n  '\\uA780': 'L',\n  '\\u01C7': 'LJ',\n  '\\u01C8': 'Lj',\n  '\\u24C2': 'M',\n  '\\uFF2D': 'M',\n  '\\u1E3E': 'M',\n  '\\u1E40': 'M',\n  '\\u1E42': 'M',\n  '\\u2C6E': 'M',\n  '\\u019C': 'M',\n  '\\u24C3': 'N',\n  '\\uFF2E': 'N',\n  '\\u01F8': 'N',\n  '\\u0143': 'N',\n  '\\u00D1': 'N',\n  '\\u1E44': 'N',\n  '\\u0147': 'N',\n  '\\u1E46': 'N',\n  '\\u0145': 'N',\n  '\\u1E4A': 'N',\n  '\\u1E48': 'N',\n  '\\u0220': 'N',\n  '\\u019D': 'N',\n  '\\uA790': 'N',\n  '\\uA7A4': 'N',\n  '\\u01CA': 'NJ',\n  '\\u01CB': 'Nj',\n  '\\u24C4': 'O',\n  '\\uFF2F': 'O',\n  '\\u00D2': 'O',\n  '\\u00D3': 'O',\n  '\\u00D4': 'O',\n  '\\u1ED2': 'O',\n  '\\u1ED0': 'O',\n  '\\u1ED6': 'O',\n  '\\u1ED4': 'O',\n  '\\u00D5': 'O',\n  '\\u1E4C': 'O',\n  '\\u022C': 'O',\n  '\\u1E4E': 'O',\n  '\\u014C': 'O',\n  '\\u1E50': 'O',\n  '\\u1E52': 'O',\n  '\\u014E': 'O',\n  '\\u022E': 'O',\n  '\\u0230': 'O',\n  '\\u00D6': 'O',\n  '\\u022A': 'O',\n  '\\u1ECE': 'O',\n  '\\u0150': 'O',\n  '\\u01D1': 'O',\n  '\\u020C': 'O',\n  '\\u020E': 'O',\n  '\\u01A0': 'O',\n  '\\u1EDC': 'O',\n  '\\u1EDA': 'O',\n  '\\u1EE0': 'O',\n  '\\u1EDE': 'O',\n  '\\u1EE2': 'O',\n  '\\u1ECC': 'O',\n  '\\u1ED8': 'O',\n  '\\u01EA': 'O',\n  '\\u01EC': 'O',\n  '\\u00D8': 'O',\n  '\\u01FE': 'O',\n  '\\u0186': 'O',\n  '\\u019F': 'O',\n  '\\uA74A': 'O',\n  '\\uA74C': 'O',\n  '\\u01A2': 'OI',\n  '\\uA74E': 'OO',\n  '\\u0222': 'OU',\n  '\\u24C5': 'P',\n  '\\uFF30': 'P',\n  '\\u1E54': 'P',\n  '\\u1E56': 'P',\n  '\\u01A4': 'P',\n  '\\u2C63': 'P',\n  '\\uA750': 'P',\n  '\\uA752': 'P',\n  '\\uA754': 'P',\n  '\\u24C6': 'Q',\n  '\\uFF31': 'Q',\n  '\\uA756': 'Q',\n  '\\uA758': 'Q',\n  '\\u024A': 'Q',\n  '\\u24C7': 'R',\n  '\\uFF32': 'R',\n  '\\u0154': 'R',\n  '\\u1E58': 'R',\n  '\\u0158': 'R',\n  '\\u0210': 'R',\n  '\\u0212': 'R',\n  '\\u1E5A': 'R',\n  '\\u1E5C': 'R',\n  '\\u0156': 'R',\n  '\\u1E5E': 'R',\n  '\\u024C': 'R',\n  '\\u2C64': 'R',\n  '\\uA75A': 'R',\n  '\\uA7A6': 'R',\n  '\\uA782': 'R',\n  '\\u24C8': 'S',\n  '\\uFF33': 'S',\n  '\\u1E9E': 'S',\n  '\\u015A': 'S',\n  '\\u1E64': 'S',\n  '\\u015C': 'S',\n  '\\u1E60': 'S',\n  '\\u0160': 'S',\n  '\\u1E66': 'S',\n  '\\u1E62': 'S',\n  '\\u1E68': 'S',\n  '\\u0218': 'S',\n  '\\u015E': 'S',\n  '\\u2C7E': 'S',\n  '\\uA7A8': 'S',\n  '\\uA784': 'S',\n  '\\u24C9': 'T',\n  '\\uFF34': 'T',\n  '\\u1E6A': 'T',\n  '\\u0164': 'T',\n  '\\u1E6C': 'T',\n  '\\u021A': 'T',\n  '\\u0162': 'T',\n  '\\u1E70': 'T',\n  '\\u1E6E': 'T',\n  '\\u0166': 'T',\n  '\\u01AC': 'T',\n  '\\u01AE': 'T',\n  '\\u023E': 'T',\n  '\\uA786': 'T',\n  '\\uA728': 'TZ',\n  '\\u24CA': 'U',\n  '\\uFF35': 'U',\n  '\\u00D9': 'U',\n  '\\u00DA': 'U',\n  '\\u00DB': 'U',\n  '\\u0168': 'U',\n  '\\u1E78': 'U',\n  '\\u016A': 'U',\n  '\\u1E7A': 'U',\n  '\\u016C': 'U',\n  '\\u00DC': 'U',\n  '\\u01DB': 'U',\n  '\\u01D7': 'U',\n  '\\u01D5': 'U',\n  '\\u01D9': 'U',\n  '\\u1EE6': 'U',\n  '\\u016E': 'U',\n  '\\u0170': 'U',\n  '\\u01D3': 'U',\n  '\\u0214': 'U',\n  '\\u0216': 'U',\n  '\\u01AF': 'U',\n  '\\u1EEA': 'U',\n  '\\u1EE8': 'U',\n  '\\u1EEE': 'U',\n  '\\u1EEC': 'U',\n  '\\u1EF0': 'U',\n  '\\u1EE4': 'U',\n  '\\u1E72': 'U',\n  '\\u0172': 'U',\n  '\\u1E76': 'U',\n  '\\u1E74': 'U',\n  '\\u0244': 'U',\n  '\\u24CB': 'V',\n  '\\uFF36': 'V',\n  '\\u1E7C': 'V',\n  '\\u1E7E': 'V',\n  '\\u01B2': 'V',\n  '\\uA75E': 'V',\n  '\\u0245': 'V',\n  '\\uA760': 'VY',\n  '\\u24CC': 'W',\n  '\\uFF37': 'W',\n  '\\u1E80': 'W',\n  '\\u1E82': 'W',\n  '\\u0174': 'W',\n  '\\u1E86': 'W',\n  '\\u1E84': 'W',\n  '\\u1E88': 'W',\n  '\\u2C72': 'W',\n  '\\u24CD': 'X',\n  '\\uFF38': 'X',\n  '\\u1E8A': 'X',\n  '\\u1E8C': 'X',\n  '\\u24CE': 'Y',\n  '\\uFF39': 'Y',\n  '\\u1EF2': 'Y',\n  '\\u00DD': 'Y',\n  '\\u0176': 'Y',\n  '\\u1EF8': 'Y',\n  '\\u0232': 'Y',\n  '\\u1E8E': 'Y',\n  '\\u0178': 'Y',\n  '\\u1EF6': 'Y',\n  '\\u1EF4': 'Y',\n  '\\u01B3': 'Y',\n  '\\u024E': 'Y',\n  '\\u1EFE': 'Y',\n  '\\u24CF': 'Z',\n  '\\uFF3A': 'Z',\n  '\\u0179': 'Z',\n  '\\u1E90': 'Z',\n  '\\u017B': 'Z',\n  '\\u017D': 'Z',\n  '\\u1E92': 'Z',\n  '\\u1E94': 'Z',\n  '\\u01B5': 'Z',\n  '\\u0224': 'Z',\n  '\\u2C7F': 'Z',\n  '\\u2C6B': 'Z',\n  '\\uA762': 'Z',\n  '\\u24D0': 'a',\n  '\\uFF41': 'a',\n  '\\u1E9A': 'a',\n  '\\u00E0': 'a',\n  '\\u00E1': 'a',\n  '\\u00E2': 'a',\n  '\\u1EA7': 'a',\n  '\\u1EA5': 'a',\n  '\\u1EAB': 'a',\n  '\\u1EA9': 'a',\n  '\\u00E3': 'a',\n  '\\u0101': 'a',\n  '\\u0103': 'a',\n  '\\u1EB1': 'a',\n  '\\u1EAF': 'a',\n  '\\u1EB5': 'a',\n  '\\u1EB3': 'a',\n  '\\u0227': 'a',\n  '\\u01E1': 'a',\n  '\\u00E4': 'a',\n  '\\u01DF': 'a',\n  '\\u1EA3': 'a',\n  '\\u00E5': 'a',\n  '\\u01FB': 'a',\n  '\\u01CE': 'a',\n  '\\u0201': 'a',\n  '\\u0203': 'a',\n  '\\u1EA1': 'a',\n  '\\u1EAD': 'a',\n  '\\u1EB7': 'a',\n  '\\u1E01': 'a',\n  '\\u0105': 'a',\n  '\\u2C65': 'a',\n  '\\u0250': 'a',\n  '\\uA733': 'aa',\n  '\\u00E6': 'ae',\n  '\\u01FD': 'ae',\n  '\\u01E3': 'ae',\n  '\\uA735': 'ao',\n  '\\uA737': 'au',\n  '\\uA739': 'av',\n  '\\uA73B': 'av',\n  '\\uA73D': 'ay',\n  '\\u24D1': 'b',\n  '\\uFF42': 'b',\n  '\\u1E03': 'b',\n  '\\u1E05': 'b',\n  '\\u1E07': 'b',\n  '\\u0180': 'b',\n  '\\u0183': 'b',\n  '\\u0253': 'b',\n  '\\u24D2': 'c',\n  '\\uFF43': 'c',\n  '\\u0107': 'c',\n  '\\u0109': 'c',\n  '\\u010B': 'c',\n  '\\u010D': 'c',\n  '\\u00E7': 'c',\n  '\\u1E09': 'c',\n  '\\u0188': 'c',\n  '\\u023C': 'c',\n  '\\uA73F': 'c',\n  '\\u2184': 'c',\n  '\\u24D3': 'd',\n  '\\uFF44': 'd',\n  '\\u1E0B': 'd',\n  '\\u010F': 'd',\n  '\\u1E0D': 'd',\n  '\\u1E11': 'd',\n  '\\u1E13': 'd',\n  '\\u1E0F': 'd',\n  '\\u0111': 'd',\n  '\\u018C': 'd',\n  '\\u0256': 'd',\n  '\\u0257': 'd',\n  '\\uA77A': 'd',\n  '\\u01F3': 'dz',\n  '\\u01C6': 'dz',\n  '\\u24D4': 'e',\n  '\\uFF45': 'e',\n  '\\u00E8': 'e',\n  '\\u00E9': 'e',\n  '\\u00EA': 'e',\n  '\\u1EC1': 'e',\n  '\\u1EBF': 'e',\n  '\\u1EC5': 'e',\n  '\\u1EC3': 'e',\n  '\\u1EBD': 'e',\n  '\\u0113': 'e',\n  '\\u1E15': 'e',\n  '\\u1E17': 'e',\n  '\\u0115': 'e',\n  '\\u0117': 'e',\n  '\\u00EB': 'e',\n  '\\u1EBB': 'e',\n  '\\u011B': 'e',\n  '\\u0205': 'e',\n  '\\u0207': 'e',\n  '\\u1EB9': 'e',\n  '\\u1EC7': 'e',\n  '\\u0229': 'e',\n  '\\u1E1D': 'e',\n  '\\u0119': 'e',\n  '\\u1E19': 'e',\n  '\\u1E1B': 'e',\n  '\\u0247': 'e',\n  '\\u025B': 'e',\n  '\\u01DD': 'e',\n  '\\u24D5': 'f',\n  '\\uFF46': 'f',\n  '\\u1E1F': 'f',\n  '\\u0192': 'f',\n  '\\uA77C': 'f',\n  '\\u24D6': 'g',\n  '\\uFF47': 'g',\n  '\\u01F5': 'g',\n  '\\u011D': 'g',\n  '\\u1E21': 'g',\n  '\\u011F': 'g',\n  '\\u0121': 'g',\n  '\\u01E7': 'g',\n  '\\u0123': 'g',\n  '\\u01E5': 'g',\n  '\\u0260': 'g',\n  '\\uA7A1': 'g',\n  '\\u1D79': 'g',\n  '\\uA77F': 'g',\n  '\\u24D7': 'h',\n  '\\uFF48': 'h',\n  '\\u0125': 'h',\n  '\\u1E23': 'h',\n  '\\u1E27': 'h',\n  '\\u021F': 'h',\n  '\\u1E25': 'h',\n  '\\u1E29': 'h',\n  '\\u1E2B': 'h',\n  '\\u1E96': 'h',\n  '\\u0127': 'h',\n  '\\u2C68': 'h',\n  '\\u2C76': 'h',\n  '\\u0265': 'h',\n  '\\u0195': 'hv',\n  '\\u24D8': 'i',\n  '\\uFF49': 'i',\n  '\\u00EC': 'i',\n  '\\u00ED': 'i',\n  '\\u00EE': 'i',\n  '\\u0129': 'i',\n  '\\u012B': 'i',\n  '\\u012D': 'i',\n  '\\u00EF': 'i',\n  '\\u1E2F': 'i',\n  '\\u1EC9': 'i',\n  '\\u01D0': 'i',\n  '\\u0209': 'i',\n  '\\u020B': 'i',\n  '\\u1ECB': 'i',\n  '\\u012F': 'i',\n  '\\u1E2D': 'i',\n  '\\u0268': 'i',\n  '\\u0131': 'i',\n  '\\u24D9': 'j',\n  '\\uFF4A': 'j',\n  '\\u0135': 'j',\n  '\\u01F0': 'j',\n  '\\u0249': 'j',\n  '\\u24DA': 'k',\n  '\\uFF4B': 'k',\n  '\\u1E31': 'k',\n  '\\u01E9': 'k',\n  '\\u1E33': 'k',\n  '\\u0137': 'k',\n  '\\u1E35': 'k',\n  '\\u0199': 'k',\n  '\\u2C6A': 'k',\n  '\\uA741': 'k',\n  '\\uA743': 'k',\n  '\\uA745': 'k',\n  '\\uA7A3': 'k',\n  '\\u24DB': 'l',\n  '\\uFF4C': 'l',\n  '\\u0140': 'l',\n  '\\u013A': 'l',\n  '\\u013E': 'l',\n  '\\u1E37': 'l',\n  '\\u1E39': 'l',\n  '\\u013C': 'l',\n  '\\u1E3D': 'l',\n  '\\u1E3B': 'l',\n  '\\u017F': 'l',\n  '\\u0142': 'l',\n  '\\u019A': 'l',\n  '\\u026B': 'l',\n  '\\u2C61': 'l',\n  '\\uA749': 'l',\n  '\\uA781': 'l',\n  '\\uA747': 'l',\n  '\\u01C9': 'lj',\n  '\\u24DC': 'm',\n  '\\uFF4D': 'm',\n  '\\u1E3F': 'm',\n  '\\u1E41': 'm',\n  '\\u1E43': 'm',\n  '\\u0271': 'm',\n  '\\u026F': 'm',\n  '\\u24DD': 'n',\n  '\\uFF4E': 'n',\n  '\\u01F9': 'n',\n  '\\u0144': 'n',\n  '\\u00F1': 'n',\n  '\\u1E45': 'n',\n  '\\u0148': 'n',\n  '\\u1E47': 'n',\n  '\\u0146': 'n',\n  '\\u1E4B': 'n',\n  '\\u1E49': 'n',\n  '\\u019E': 'n',\n  '\\u0272': 'n',\n  '\\u0149': 'n',\n  '\\uA791': 'n',\n  '\\uA7A5': 'n',\n  '\\u01CC': 'nj',\n  '\\u24DE': 'o',\n  '\\uFF4F': 'o',\n  '\\u00F2': 'o',\n  '\\u00F3': 'o',\n  '\\u00F4': 'o',\n  '\\u1ED3': 'o',\n  '\\u1ED1': 'o',\n  '\\u1ED7': 'o',\n  '\\u1ED5': 'o',\n  '\\u00F5': 'o',\n  '\\u1E4D': 'o',\n  '\\u022D': 'o',\n  '\\u1E4F': 'o',\n  '\\u014D': 'o',\n  '\\u1E51': 'o',\n  '\\u1E53': 'o',\n  '\\u014F': 'o',\n  '\\u022F': 'o',\n  '\\u0231': 'o',\n  '\\u00F6': 'o',\n  '\\u022B': 'o',\n  '\\u1ECF': 'o',\n  '\\u0151': 'o',\n  '\\u01D2': 'o',\n  '\\u020D': 'o',\n  '\\u020F': 'o',\n  '\\u01A1': 'o',\n  '\\u1EDD': 'o',\n  '\\u1EDB': 'o',\n  '\\u1EE1': 'o',\n  '\\u1EDF': 'o',\n  '\\u1EE3': 'o',\n  '\\u1ECD': 'o',\n  '\\u1ED9': 'o',\n  '\\u01EB': 'o',\n  '\\u01ED': 'o',\n  '\\u00F8': 'o',\n  '\\u01FF': 'o',\n  '\\u0254': 'o',\n  '\\uA74B': 'o',\n  '\\uA74D': 'o',\n  '\\u0275': 'o',\n  '\\u01A3': 'oi',\n  '\\u0223': 'ou',\n  '\\uA74F': 'oo',\n  '\\u24DF': 'p',\n  '\\uFF50': 'p',\n  '\\u1E55': 'p',\n  '\\u1E57': 'p',\n  '\\u01A5': 'p',\n  '\\u1D7D': 'p',\n  '\\uA751': 'p',\n  '\\uA753': 'p',\n  '\\uA755': 'p',\n  '\\u24E0': 'q',\n  '\\uFF51': 'q',\n  '\\u024B': 'q',\n  '\\uA757': 'q',\n  '\\uA759': 'q',\n  '\\u24E1': 'r',\n  '\\uFF52': 'r',\n  '\\u0155': 'r',\n  '\\u1E59': 'r',\n  '\\u0159': 'r',\n  '\\u0211': 'r',\n  '\\u0213': 'r',\n  '\\u1E5B': 'r',\n  '\\u1E5D': 'r',\n  '\\u0157': 'r',\n  '\\u1E5F': 'r',\n  '\\u024D': 'r',\n  '\\u027D': 'r',\n  '\\uA75B': 'r',\n  '\\uA7A7': 'r',\n  '\\uA783': 'r',\n  '\\u24E2': 's',\n  '\\uFF53': 's',\n  '\\u00DF': 's',\n  '\\u015B': 's',\n  '\\u1E65': 's',\n  '\\u015D': 's',\n  '\\u1E61': 's',\n  '\\u0161': 's',\n  '\\u1E67': 's',\n  '\\u1E63': 's',\n  '\\u1E69': 's',\n  '\\u0219': 's',\n  '\\u015F': 's',\n  '\\u023F': 's',\n  '\\uA7A9': 's',\n  '\\uA785': 's',\n  '\\u1E9B': 's',\n  '\\u24E3': 't',\n  '\\uFF54': 't',\n  '\\u1E6B': 't',\n  '\\u1E97': 't',\n  '\\u0165': 't',\n  '\\u1E6D': 't',\n  '\\u021B': 't',\n  '\\u0163': 't',\n  '\\u1E71': 't',\n  '\\u1E6F': 't',\n  '\\u0167': 't',\n  '\\u01AD': 't',\n  '\\u0288': 't',\n  '\\u2C66': 't',\n  '\\uA787': 't',\n  '\\uA729': 'tz',\n  '\\u24E4': 'u',\n  '\\uFF55': 'u',\n  '\\u00F9': 'u',\n  '\\u00FA': 'u',\n  '\\u00FB': 'u',\n  '\\u0169': 'u',\n  '\\u1E79': 'u',\n  '\\u016B': 'u',\n  '\\u1E7B': 'u',\n  '\\u016D': 'u',\n  '\\u00FC': 'u',\n  '\\u01DC': 'u',\n  '\\u01D8': 'u',\n  '\\u01D6': 'u',\n  '\\u01DA': 'u',\n  '\\u1EE7': 'u',\n  '\\u016F': 'u',\n  '\\u0171': 'u',\n  '\\u01D4': 'u',\n  '\\u0215': 'u',\n  '\\u0217': 'u',\n  '\\u01B0': 'u',\n  '\\u1EEB': 'u',\n  '\\u1EE9': 'u',\n  '\\u1EEF': 'u',\n  '\\u1EED': 'u',\n  '\\u1EF1': 'u',\n  '\\u1EE5': 'u',\n  '\\u1E73': 'u',\n  '\\u0173': 'u',\n  '\\u1E77': 'u',\n  '\\u1E75': 'u',\n  '\\u0289': 'u',\n  '\\u24E5': 'v',\n  '\\uFF56': 'v',\n  '\\u1E7D': 'v',\n  '\\u1E7F': 'v',\n  '\\u028B': 'v',\n  '\\uA75F': 'v',\n  '\\u028C': 'v',\n  '\\uA761': 'vy',\n  '\\u24E6': 'w',\n  '\\uFF57': 'w',\n  '\\u1E81': 'w',\n  '\\u1E83': 'w',\n  '\\u0175': 'w',\n  '\\u1E87': 'w',\n  '\\u1E85': 'w',\n  '\\u1E98': 'w',\n  '\\u1E89': 'w',\n  '\\u2C73': 'w',\n  '\\u24E7': 'x',\n  '\\uFF58': 'x',\n  '\\u1E8B': 'x',\n  '\\u1E8D': 'x',\n  '\\u24E8': 'y',\n  '\\uFF59': 'y',\n  '\\u1EF3': 'y',\n  '\\u00FD': 'y',\n  '\\u0177': 'y',\n  '\\u1EF9': 'y',\n  '\\u0233': 'y',\n  '\\u1E8F': 'y',\n  '\\u00FF': 'y',\n  '\\u1EF7': 'y',\n  '\\u1E99': 'y',\n  '\\u1EF5': 'y',\n  '\\u01B4': 'y',\n  '\\u024F': 'y',\n  '\\u1EFF': 'y',\n  '\\u24E9': 'z',\n  '\\uFF5A': 'z',\n  '\\u017A': 'z',\n  '\\u1E91': 'z',\n  '\\u017C': 'z',\n  '\\u017E': 'z',\n  '\\u1E93': 'z',\n  '\\u1E95': 'z',\n  '\\u01B6': 'z',\n  '\\u0225': 'z',\n  '\\u0240': 'z',\n  '\\u2C6C': 'z',\n  '\\uA763': 'z',\n  '\\u0386': '\\u0391',\n  '\\u0388': '\\u0395',\n  '\\u0389': '\\u0397',\n  '\\u038A': '\\u0399',\n  '\\u03AA': '\\u0399',\n  '\\u038C': '\\u039F',\n  '\\u038E': '\\u03A5',\n  '\\u03AB': '\\u03A5',\n  '\\u038F': '\\u03A9',\n  '\\u03AC': '\\u03B1',\n  '\\u03AD': '\\u03B5',\n  '\\u03AE': '\\u03B7',\n  '\\u03AF': '\\u03B9',\n  '\\u03CA': '\\u03B9',\n  '\\u0390': '\\u03B9',\n  '\\u03CC': '\\u03BF',\n  '\\u03CD': '\\u03C5',\n  '\\u03CB': '\\u03C5',\n  '\\u03B0': '\\u03C5',\n  '\\u03C9': '\\u03C9',\n  '\\u03C2': '\\u03C3'\n};\n/**\n * @param {?} text\n * @return {?}\n */\n\nfunction stripSpecialChars(text) {\n  /** @type {?} */\n  const match =\n  /**\n  * @param {?} a\n  * @return {?}\n  */\n  a => {\n    return diacritics[a] || a;\n  };\n\n  return text.replace(/[^\\u0000-\\u007E]/g, match);\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/items-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass ItemsList {\n  /**\n   * @param {?} _ngSelect\n   * @param {?} _selectionModel\n   */\n  constructor(_ngSelect, _selectionModel) {\n    this._ngSelect = _ngSelect;\n    this._selectionModel = _selectionModel;\n    this._items = [];\n    this._filteredItems = [];\n    this._markedIndex = -1;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get items() {\n    return this._items;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get filteredItems() {\n    return this._filteredItems;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get markedIndex() {\n    return this._markedIndex;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get selectedItems() {\n    return this._selectionModel.value;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get markedItem() {\n    return this._filteredItems[this._markedIndex];\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get noItemsToSelect() {\n    return this._ngSelect.hideSelected && this._items.length === this.selectedItems.length;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get maxItemsSelected() {\n    return this._ngSelect.multiple && this._ngSelect.maxSelectedItems <= this.selectedItems.length;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get lastSelectedItem() {\n    /** @type {?} */\n    let i = this.selectedItems.length - 1;\n\n    for (; i >= 0; i--) {\n      /** @type {?} */\n      let item = this.selectedItems[i];\n\n      if (!item.disabled) {\n        return item;\n      }\n    }\n\n    return null;\n  }\n  /**\n   * @param {?} items\n   * @return {?}\n   */\n\n\n  setItems(items) {\n    this._items = items.map(\n    /**\n    * @param {?} item\n    * @param {?} index\n    * @return {?}\n    */\n    (item, index) => this.mapItem(item, index));\n\n    if (this._ngSelect.groupBy) {\n      this._groups = this._groupBy(this._items, this._ngSelect.groupBy);\n      this._items = this._flatten(this._groups);\n    } else {\n      this._groups = new Map();\n\n      this._groups.set(undefined, this._items);\n    }\n\n    this._filteredItems = [...this._items];\n  }\n  /**\n   * @param {?} item\n   * @return {?}\n   */\n\n\n  select(item) {\n    if (item.selected || this.maxItemsSelected) {\n      return;\n    }\n    /** @type {?} */\n\n\n    const multiple = this._ngSelect.multiple;\n\n    if (!multiple) {\n      this.clearSelected();\n    }\n\n    this._selectionModel.select(item, multiple, this._ngSelect.selectableGroupAsModel);\n\n    if (this._ngSelect.hideSelected) {\n      this._hideSelected(item);\n    }\n  }\n  /**\n   * @param {?} item\n   * @return {?}\n   */\n\n\n  unselect(item) {\n    if (!item.selected) {\n      return;\n    }\n\n    this._selectionModel.unselect(item, this._ngSelect.multiple);\n\n    if (this._ngSelect.hideSelected && isDefined(item.index) && this._ngSelect.multiple) {\n      this._showSelected(item);\n    }\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  findItem(value) {\n    /** @type {?} */\n    let findBy;\n\n    if (this._ngSelect.compareWith) {\n      findBy =\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      item => this._ngSelect.compareWith(item.value, value);\n    } else if (this._ngSelect.bindValue) {\n      findBy =\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      item => !item.children && this.resolveNested(item.value, this._ngSelect.bindValue) === value;\n    } else {\n      findBy =\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      item => item.value === value || !item.children && item.label && item.label === this.resolveNested(value, this._ngSelect.bindLabel);\n    }\n\n    return this._items.find(\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => findBy(item));\n  }\n  /**\n   * @param {?} item\n   * @return {?}\n   */\n\n\n  addItem(item) {\n    /** @type {?} */\n    const option = this.mapItem(item, this._items.length);\n\n    this._items.push(option);\n\n    this._filteredItems.push(option);\n\n    return option;\n  }\n  /**\n   * @param {?=} keepDisabled\n   * @return {?}\n   */\n\n\n  clearSelected(keepDisabled = false) {\n    this._selectionModel.clear(keepDisabled);\n\n    this._items.forEach(\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => {\n      item.selected = keepDisabled && item.selected && item.disabled;\n      item.marked = false;\n    });\n\n    if (this._ngSelect.hideSelected) {\n      this.resetFilteredItems();\n    }\n  }\n  /**\n   * @param {?} term\n   * @return {?}\n   */\n\n\n  findByLabel(term) {\n    term = stripSpecialChars(term).toLocaleLowerCase();\n    return this.filteredItems.find(\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => {\n      /** @type {?} */\n      const label = stripSpecialChars(item.label).toLocaleLowerCase();\n      return label.substr(0, term.length) === term;\n    });\n  }\n  /**\n   * @param {?} term\n   * @return {?}\n   */\n\n\n  filter(term) {\n    if (!term) {\n      this.resetFilteredItems();\n      return;\n    }\n\n    this._filteredItems = [];\n    term = this._ngSelect.searchFn ? term : stripSpecialChars(term).toLocaleLowerCase();\n    /** @type {?} */\n\n    const match = this._ngSelect.searchFn || this._defaultSearchFn;\n    /** @type {?} */\n\n    const hideSelected = this._ngSelect.hideSelected;\n\n    for (const key of Array.from(this._groups.keys())) {\n      /** @type {?} */\n      const matchedItems = [];\n\n      for (const item of this._groups.get(key)) {\n        if (hideSelected && (item.parent && item.parent.selected || item.selected)) {\n          continue;\n        }\n        /** @type {?} */\n\n\n        const searchItem = this._ngSelect.searchFn ? item.value : item;\n\n        if (match(term, searchItem)) {\n          matchedItems.push(item);\n        }\n      }\n\n      if (matchedItems.length > 0) {\n        const [last] = matchedItems.slice(-1);\n\n        if (last.parent) {\n          /** @type {?} */\n          const head = this._items.find(\n          /**\n          * @param {?} x\n          * @return {?}\n          */\n          x => x === last.parent);\n\n          this._filteredItems.push(head);\n        }\n\n        this._filteredItems.push(...matchedItems);\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  resetFilteredItems() {\n    if (this._filteredItems.length === this._items.length) {\n      return;\n    }\n\n    if (this._ngSelect.hideSelected && this.selectedItems.length > 0) {\n      this._filteredItems = this._items.filter(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => !x.selected);\n    } else {\n      this._filteredItems = this._items;\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  unmarkItem() {\n    this._markedIndex = -1;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  markNextItem() {\n    this._stepToItem(+1);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  markPreviousItem() {\n    this._stepToItem(-1);\n  }\n  /**\n   * @param {?} item\n   * @return {?}\n   */\n\n\n  markItem(item) {\n    this._markedIndex = this._filteredItems.indexOf(item);\n  }\n  /**\n   * @param {?=} markDefault\n   * @return {?}\n   */\n\n\n  markSelectedOrDefault(markDefault) {\n    if (this._filteredItems.length === 0) {\n      return;\n    }\n    /** @type {?} */\n\n\n    const lastMarkedIndex = this._getLastMarkedIndex();\n\n    if (lastMarkedIndex > -1) {\n      this._markedIndex = lastMarkedIndex;\n    } else {\n      this._markedIndex = markDefault ? this.filteredItems.findIndex(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => !x.disabled) : -1;\n    }\n  }\n  /**\n   * @param {?} option\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  resolveNested(option, key) {\n    if (!isObject(option)) {\n      return option;\n    }\n\n    if (key.indexOf('.') === -1) {\n      return option[key];\n    } else {\n      /** @type {?} */\n      let keys = key.split('.');\n      /** @type {?} */\n\n      let value = option;\n\n      for (let i = 0, len = keys.length; i < len; ++i) {\n        if (value == null) {\n          return null;\n        }\n\n        value = value[keys[i]];\n      }\n\n      return value;\n    }\n  }\n  /**\n   * @param {?} item\n   * @param {?} index\n   * @return {?}\n   */\n\n\n  mapItem(item, index) {\n    /** @type {?} */\n    const label = isDefined(item.$ngOptionLabel) ? item.$ngOptionLabel : this.resolveNested(item, this._ngSelect.bindLabel);\n    /** @type {?} */\n\n    const value = isDefined(item.$ngOptionValue) ? item.$ngOptionValue : item;\n    return {\n      index: index,\n      label: isDefined(label) ? label.toString() : '',\n      value: value,\n      disabled: item.disabled,\n      htmlId: `${this._ngSelect.dropdownId}-${index}`\n    };\n  }\n  /**\n   * @return {?}\n   */\n\n\n  mapSelectedItems() {\n    /** @type {?} */\n    const multiple = this._ngSelect.multiple;\n\n    for (const selected of this.selectedItems) {\n      /** @type {?} */\n      const value = this._ngSelect.bindValue ? this.resolveNested(selected.value, this._ngSelect.bindValue) : selected.value;\n      /** @type {?} */\n\n      const item = isDefined(value) ? this.findItem(value) : null;\n\n      this._selectionModel.unselect(selected, multiple);\n\n      this._selectionModel.select(item || selected, multiple, this._ngSelect.selectableGroupAsModel);\n    }\n\n    if (this._ngSelect.hideSelected) {\n      this._filteredItems = this.filteredItems.filter(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => this.selectedItems.indexOf(x) === -1);\n    }\n  }\n  /**\n   * @private\n   * @param {?} item\n   * @return {?}\n   */\n\n\n  _showSelected(item) {\n    this._filteredItems.push(item);\n\n    if (item.parent) {\n      /** @type {?} */\n      const parent = item.parent;\n      /** @type {?} */\n\n      const parentExists = this._filteredItems.find(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => x === parent);\n\n      if (!parentExists) {\n        this._filteredItems.push(parent);\n      }\n    } else if (item.children) {\n      for (const child of item.children) {\n        child.selected = false;\n\n        this._filteredItems.push(child);\n      }\n    }\n\n    this._filteredItems = [...this._filteredItems.sort(\n    /**\n    * @param {?} a\n    * @param {?} b\n    * @return {?}\n    */\n    (a, b) => a.index - b.index)];\n  }\n  /**\n   * @private\n   * @param {?} item\n   * @return {?}\n   */\n\n\n  _hideSelected(item) {\n    this._filteredItems = this._filteredItems.filter(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    x => x !== item);\n\n    if (item.parent) {\n      /** @type {?} */\n      const children = item.parent.children;\n\n      if (children.every(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => x.selected)) {\n        this._filteredItems = this._filteredItems.filter(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        x => x !== item.parent);\n      }\n    } else if (item.children) {\n      this._filteredItems = this.filteredItems.filter(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => x.parent !== item);\n    }\n  }\n  /**\n   * @private\n   * @param {?} search\n   * @param {?} opt\n   * @return {?}\n   */\n\n\n  _defaultSearchFn(search, opt) {\n    /** @type {?} */\n    const label = stripSpecialChars(opt.label).toLocaleLowerCase();\n    return label.indexOf(search) > -1;\n  }\n  /**\n   * @private\n   * @param {?} steps\n   * @return {?}\n   */\n\n\n  _getNextItemIndex(steps) {\n    if (steps > 0) {\n      return this._markedIndex === this._filteredItems.length - 1 ? 0 : this._markedIndex + 1;\n    }\n\n    return this._markedIndex <= 0 ? this._filteredItems.length - 1 : this._markedIndex - 1;\n  }\n  /**\n   * @private\n   * @param {?} steps\n   * @return {?}\n   */\n\n\n  _stepToItem(steps) {\n    if (this._filteredItems.length === 0 || this._filteredItems.every(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    x => x.disabled)) {\n      return;\n    }\n\n    this._markedIndex = this._getNextItemIndex(steps);\n\n    if (this.markedItem.disabled) {\n      this._stepToItem(steps);\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  _getLastMarkedIndex() {\n    if (this._ngSelect.hideSelected) {\n      return -1;\n    }\n\n    if (this._markedIndex > -1 && this.markedItem === undefined) {\n      return -1;\n    }\n    /** @type {?} */\n\n\n    const selectedIndex = this._filteredItems.indexOf(this.lastSelectedItem);\n\n    if (this.lastSelectedItem && selectedIndex < 0) {\n      return -1;\n    }\n\n    return Math.max(this.markedIndex, selectedIndex);\n  }\n  /**\n   * @private\n   * @param {?} items\n   * @param {?} prop\n   * @return {?}\n   */\n\n\n  _groupBy(items, prop) {\n    /** @type {?} */\n    const groups = new Map();\n\n    if (items.length === 0) {\n      return groups;\n    } // Check if items are already grouped by given key.\n\n\n    if (Array.isArray(items[0].value[\n    /** @type {?} */\n    prop])) {\n      for (const item of items) {\n        /** @type {?} */\n        const children = (item.value[\n        /** @type {?} */\n        prop] || []).map(\n        /**\n        * @param {?} x\n        * @param {?} index\n        * @return {?}\n        */\n        (x, index) => this.mapItem(x, index));\n        groups.set(item, children);\n      }\n\n      return groups;\n    }\n    /** @type {?} */\n\n\n    const isFnKey = isFunction(this._ngSelect.groupBy);\n    /** @type {?} */\n\n    const keyFn =\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => {\n      /** @type {?} */\n      let key = isFnKey ?\n      /** @type {?} */\n      prop(item.value) : item.value[\n      /** @type {?} */\n      prop];\n      return isDefined(key) ? key : undefined;\n    }; // Group items by key.\n\n\n    for (const item of items) {\n      /** @type {?} */\n      let key = keyFn(item);\n      /** @type {?} */\n\n      const group = groups.get(key);\n\n      if (group) {\n        group.push(item);\n      } else {\n        groups.set(key, [item]);\n      }\n    }\n\n    return groups;\n  }\n  /**\n   * @private\n   * @param {?} groups\n   * @return {?}\n   */\n\n\n  _flatten(groups) {\n    /** @type {?} */\n    const isGroupByFn = isFunction(this._ngSelect.groupBy);\n    /** @type {?} */\n\n    const items = [];\n\n    for (const key of Array.from(groups.keys())) {\n      /** @type {?} */\n      let i = items.length;\n\n      if (key === undefined) {\n        /** @type {?} */\n        const withoutGroup = groups.get(undefined) || [];\n        items.push(...withoutGroup.map(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        x => Object.assign(Object.assign({}, x), {\n          index: i++\n        })));\n        continue;\n      }\n      /** @type {?} */\n\n\n      const isObjectKey = isObject(key);\n      /** @type {?} */\n\n      const parent = {\n        label: isObjectKey ? '' : String(key),\n        children: undefined,\n        parent: null,\n        index: i++,\n        disabled: !this._ngSelect.selectableGroup,\n        htmlId: newId()\n      };\n      /** @type {?} */\n\n      const groupKey = isGroupByFn ? this._ngSelect.bindLabel :\n      /** @type {?} */\n      this._ngSelect.groupBy;\n      /** @type {?} */\n\n      const groupValue = this._ngSelect.groupValue || (\n      /**\n      * @return {?}\n      */\n      () => {\n        if (isObjectKey) {\n          return (\n            /** @type {?} */\n            key.value\n          );\n        }\n\n        return {\n          [groupKey]: key\n        };\n      });\n      /** @type {?} */\n\n\n      const children = groups.get(key).map(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => {\n        x.parent = parent;\n        x.children = undefined;\n        x.index = i++;\n        return x;\n      });\n      parent.children = children;\n      parent.value = groupValue(key, children.map(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => x.value));\n      items.push(parent);\n      items.push(...children);\n    }\n\n    return items;\n  }\n\n}\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  ItemsList.prototype._groups;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ItemsList.prototype._items;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ItemsList.prototype._filteredItems;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ItemsList.prototype._markedIndex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ItemsList.prototype._ngSelect;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ItemsList.prototype._selectionModel;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ng-select.types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\n\nfunction NgOption() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  NgOption.prototype.index;\n  /** @type {?|undefined} */\n\n  NgOption.prototype.htmlId;\n  /** @type {?|undefined} */\n\n  NgOption.prototype.selected;\n  /** @type {?|undefined} */\n\n  NgOption.prototype.disabled;\n  /** @type {?|undefined} */\n\n  NgOption.prototype.marked;\n  /** @type {?|undefined} */\n\n  NgOption.prototype.label;\n  /** @type {?|undefined} */\n\n  NgOption.prototype.value;\n  /** @type {?|undefined} */\n\n  NgOption.prototype.parent;\n  /** @type {?|undefined} */\n\n  NgOption.prototype.children;\n  /* Skipping unhandled member: [name: string]: any;*/\n}\n/** @enum {number} */\n\n\nconst KeyCode = {\n  Tab: 9,\n  Enter: 13,\n  Esc: 27,\n  Space: 32,\n  ArrowUp: 38,\n  ArrowDown: 40,\n  Backspace: 8\n};\nKeyCode[KeyCode.Tab] = 'Tab';\nKeyCode[KeyCode.Enter] = 'Enter';\nKeyCode[KeyCode.Esc] = 'Esc';\nKeyCode[KeyCode.Space] = 'Space';\nKeyCode[KeyCode.ArrowUp] = 'ArrowUp';\nKeyCode[KeyCode.ArrowDown] = 'ArrowDown';\nKeyCode[KeyCode.Backspace] = 'Backspace';\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ng-dropdown-panel.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\nfunction ItemsRangeResult() {}\n\nif (false) {\n  /** @type {?} */\n  ItemsRangeResult.prototype.scrollHeight;\n  /** @type {?} */\n\n  ItemsRangeResult.prototype.topPadding;\n  /** @type {?} */\n\n  ItemsRangeResult.prototype.start;\n  /** @type {?} */\n\n  ItemsRangeResult.prototype.end;\n}\n/**\n * @record\n */\n\n\nfunction PanelDimensions() {}\n\nif (false) {\n  /** @type {?} */\n  PanelDimensions.prototype.itemHeight;\n  /** @type {?} */\n\n  PanelDimensions.prototype.panelHeight;\n  /** @type {?} */\n\n  PanelDimensions.prototype.itemsPerViewport;\n}\n\nlet NgDropdownPanelService = /*#__PURE__*/(() => {\n  class NgDropdownPanelService {\n    constructor() {\n      this._dimensions = {\n        itemHeight: 0,\n        panelHeight: 0,\n        itemsPerViewport: 0\n      };\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get dimensions() {\n      return this._dimensions;\n    }\n    /**\n     * @param {?} scrollPos\n     * @param {?} itemsLength\n     * @param {?} buffer\n     * @return {?}\n     */\n\n\n    calculateItems(scrollPos, itemsLength, buffer) {\n      /** @type {?} */\n      const d = this._dimensions;\n      /** @type {?} */\n\n      const scrollHeight = d.itemHeight * itemsLength;\n      /** @type {?} */\n\n      const scrollTop = Math.max(0, scrollPos);\n      /** @type {?} */\n\n      const indexByScrollTop = scrollTop / scrollHeight * itemsLength;\n      /** @type {?} */\n\n      let end = Math.min(itemsLength, Math.ceil(indexByScrollTop) + (d.itemsPerViewport + 1));\n      /** @type {?} */\n\n      const maxStartEnd = end;\n      /** @type {?} */\n\n      const maxStart = Math.max(0, maxStartEnd - d.itemsPerViewport);\n      /** @type {?} */\n\n      let start = Math.min(maxStart, Math.floor(indexByScrollTop));\n      /** @type {?} */\n\n      let topPadding = d.itemHeight * Math.ceil(start) - d.itemHeight * Math.min(start, buffer);\n      topPadding = !isNaN(topPadding) ? topPadding : 0;\n      start = !isNaN(start) ? start : -1;\n      end = !isNaN(end) ? end : -1;\n      start -= buffer;\n      start = Math.max(0, start);\n      end += buffer;\n      end = Math.min(itemsLength, end);\n      return {\n        topPadding,\n        scrollHeight,\n        start,\n        end\n      };\n    }\n    /**\n     * @param {?} itemHeight\n     * @param {?} panelHeight\n     * @return {?}\n     */\n\n\n    setDimensions(itemHeight, panelHeight) {\n      /** @type {?} */\n      const itemsPerViewport = Math.max(1, Math.floor(panelHeight / itemHeight));\n      this._dimensions = {\n        itemHeight,\n        panelHeight,\n        itemsPerViewport\n      };\n    }\n    /**\n     * @param {?} itemTop\n     * @param {?} itemHeight\n     * @param {?} lastScroll\n     * @return {?}\n     */\n\n\n    getScrollTo(itemTop, itemHeight, lastScroll) {\n      const {\n        panelHeight\n      } = this.dimensions;\n      /** @type {?} */\n\n      const itemBottom = itemTop + itemHeight;\n      /** @type {?} */\n\n      const top = lastScroll;\n      /** @type {?} */\n\n      const bottom = top + panelHeight;\n\n      if (panelHeight >= itemBottom && lastScroll === itemTop) {\n        return null;\n      }\n\n      if (itemBottom > bottom) {\n        return top + itemBottom - bottom;\n      } else if (itemTop <= top) {\n        return itemTop;\n      }\n\n      return null;\n    }\n\n  }\n\n  NgDropdownPanelService.ɵfac = function NgDropdownPanelService_Factory(t) {\n    return new (t || NgDropdownPanelService)();\n  };\n\n  NgDropdownPanelService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NgDropdownPanelService,\n    factory: NgDropdownPanelService.ɵfac\n  });\n  return NgDropdownPanelService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  NgDropdownPanelService.prototype._dimensions;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ng-dropdown-panel.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst TOP_CSS_CLASS = 'ng-select-top';\n/** @type {?} */\n\nconst BOTTOM_CSS_CLASS = 'ng-select-bottom';\n/** @type {?} */\n\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\nlet NgDropdownPanelComponent = /*#__PURE__*/(() => {\n  class NgDropdownPanelComponent {\n    /**\n     * @param {?} _renderer\n     * @param {?} _zone\n     * @param {?} _panelService\n     * @param {?} _elementRef\n     * @param {?} _document\n     */\n    constructor(_renderer, _zone, _panelService, _elementRef, _document) {\n      this._renderer = _renderer;\n      this._zone = _zone;\n      this._panelService = _panelService;\n      this._document = _document;\n      this.items = [];\n      this.position = 'auto';\n      this.virtualScroll = false;\n      this.filterValue = null;\n      this.update = new EventEmitter();\n      this.scroll = new EventEmitter();\n      this.scrollToEnd = new EventEmitter();\n      this.outsideClick = new EventEmitter();\n      this._destroy$ = new Subject();\n      this._scrollToEndFired = false;\n      this._updateScrollHeight = false;\n      this._lastScrollPosition = 0;\n      this._dropdown = _elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get currentPosition() {\n      return this._currentPosition;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    get itemsLength() {\n      return this._itemsLength;\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set itemsLength(value) {\n      if (value !== this._itemsLength) {\n        this._itemsLength = value;\n\n        this._onItemsLengthChanged();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    get _startOffset() {\n      if (this.markedItem) {\n        const {\n          itemHeight,\n          panelHeight\n        } = this._panelService.dimensions;\n        /** @type {?} */\n\n        const offset = this.markedItem.index * itemHeight;\n        return panelHeight > offset ? 0 : offset;\n      }\n\n      return 0;\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    handleMousedown($event) {\n      /** @type {?} */\n      const target =\n      /** @type {?} */\n      $event.target;\n\n      if (target.tagName === 'INPUT') {\n        return;\n      }\n\n      $event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnInit() {\n      this._select = this._dropdown.parentElement;\n      this._virtualPadding = this.paddingElementRef.nativeElement;\n      this._scrollablePanel = this.scrollElementRef.nativeElement;\n      this._contentPanel = this.contentElementRef.nativeElement;\n\n      this._handleScroll();\n\n      this._handleOutsideClick();\n\n      this._appendDropdown();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if (changes.items) {\n        /** @type {?} */\n        const change = changes.items;\n\n        this._onItemsChange(change.currentValue, change.firstChange);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      this._destroy$.next();\n\n      this._destroy$.complete();\n\n      this._destroy$.unsubscribe();\n\n      if (this.appendTo) {\n        this._renderer.removeChild(this._dropdown.parentNode, this._dropdown);\n      }\n    }\n    /**\n     * @param {?} option\n     * @param {?=} startFromOption\n     * @return {?}\n     */\n\n\n    scrollTo(option, startFromOption = false) {\n      if (!option) {\n        return;\n      }\n      /** @type {?} */\n\n\n      const index = this.items.indexOf(option);\n\n      if (index < 0 || index >= this.itemsLength) {\n        return;\n      }\n      /** @type {?} */\n\n\n      let scrollTo;\n\n      if (this.virtualScroll) {\n        /** @type {?} */\n        const itemHeight = this._panelService.dimensions.itemHeight;\n        scrollTo = this._panelService.getScrollTo(index * itemHeight, itemHeight, this._lastScrollPosition);\n      } else {\n        /** @type {?} */\n        const item = this._dropdown.querySelector(`#${option.htmlId}`);\n        /** @type {?} */\n\n\n        const lastScroll = startFromOption ? item.offsetTop : this._lastScrollPosition;\n        scrollTo = this._panelService.getScrollTo(item.offsetTop, item.clientHeight, lastScroll);\n      }\n\n      if (isDefined(scrollTo)) {\n        this._scrollablePanel.scrollTop = scrollTo;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    scrollToTag() {\n      /** @type {?} */\n      const panel = this._scrollablePanel;\n      panel.scrollTop = panel.scrollHeight - panel.clientHeight;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    adjustPosition() {\n      this._updateYPosition();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _handleDropdownPosition() {\n      this._currentPosition = this._calculateCurrentPosition(this._dropdown);\n\n      if (this._currentPosition === 'top') {\n        this._renderer.addClass(this._dropdown, TOP_CSS_CLASS);\n\n        this._renderer.removeClass(this._dropdown, BOTTOM_CSS_CLASS);\n\n        this._renderer.addClass(this._select, TOP_CSS_CLASS);\n\n        this._renderer.removeClass(this._select, BOTTOM_CSS_CLASS);\n      } else {\n        this._renderer.addClass(this._dropdown, BOTTOM_CSS_CLASS);\n\n        this._renderer.removeClass(this._dropdown, TOP_CSS_CLASS);\n\n        this._renderer.addClass(this._select, BOTTOM_CSS_CLASS);\n\n        this._renderer.removeClass(this._select, TOP_CSS_CLASS);\n      }\n\n      if (this.appendTo) {\n        this._updateYPosition();\n      }\n\n      this._dropdown.style.opacity = '1';\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _handleScroll() {\n      this._zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => {\n        fromEvent(this.scrollElementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroy$), auditTime(0, SCROLL_SCHEDULER)).subscribe(\n        /**\n        * @param {?} e\n        * @return {?}\n        */\n        e => {\n          /** @type {?} */\n          const path = e.path || e.composedPath && e.composedPath();\n          /** @type {?} */\n\n          const scrollTop = path.length === 0 ? e.target.scrollTop : path[0].scrollTop;\n\n          this._onContentScrolled(scrollTop);\n        });\n      });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _handleOutsideClick() {\n      if (!this._document) {\n        return;\n      }\n\n      this._zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => {\n        merge(fromEvent(this._document, 'touchstart', {\n          capture: true\n        }), fromEvent(this._document, 'mousedown', {\n          capture: true\n        })).pipe(takeUntil(this._destroy$)).subscribe(\n        /**\n        * @param {?} $event\n        * @return {?}\n        */\n        $event => this._checkToClose($event));\n      });\n    }\n    /**\n     * @private\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    _checkToClose($event) {\n      if (this._select.contains($event.target) || this._dropdown.contains($event.target)) {\n        return;\n      }\n      /** @type {?} */\n\n\n      const path = $event.path || $event.composedPath && $event.composedPath();\n\n      if ($event.target && $event.target.shadowRoot && path && path[0] && this._select.contains(path[0])) {\n        return;\n      }\n\n      this._zone.run(\n      /**\n      * @return {?}\n      */\n      () => this.outsideClick.emit());\n    }\n    /**\n     * @private\n     * @param {?} items\n     * @param {?} firstChange\n     * @return {?}\n     */\n\n\n    _onItemsChange(items, firstChange) {\n      this.items = items || [];\n      this._scrollToEndFired = false;\n      this.itemsLength = items.length;\n\n      if (this.virtualScroll) {\n        this._updateItemsRange(firstChange);\n      } else {\n        this._setVirtualHeight();\n\n        this._updateItems(firstChange);\n      }\n    }\n    /**\n     * @private\n     * @param {?} firstChange\n     * @return {?}\n     */\n\n\n    _updateItems(firstChange) {\n      this.update.emit(this.items);\n\n      if (firstChange === false) {\n        return;\n      }\n\n      this._zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => {\n        Promise.resolve().then(\n        /**\n        * @return {?}\n        */\n        () => {\n          /** @type {?} */\n          const panelHeight = this._scrollablePanel.clientHeight;\n\n          this._panelService.setDimensions(0, panelHeight);\n\n          this._handleDropdownPosition();\n\n          this.scrollTo(this.markedItem, firstChange);\n        });\n      });\n    }\n    /**\n     * @private\n     * @param {?} firstChange\n     * @return {?}\n     */\n\n\n    _updateItemsRange(firstChange) {\n      this._zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => {\n        this._measureDimensions().then(\n        /**\n        * @return {?}\n        */\n        () => {\n          if (firstChange) {\n            this._renderItemsRange(this._startOffset);\n\n            this._handleDropdownPosition();\n          } else {\n            this._renderItemsRange();\n          }\n        });\n      });\n    }\n    /**\n     * @private\n     * @param {?} scrollTop\n     * @return {?}\n     */\n\n\n    _onContentScrolled(scrollTop) {\n      if (this.virtualScroll) {\n        this._renderItemsRange(scrollTop);\n      }\n\n      this._lastScrollPosition = scrollTop;\n\n      this._fireScrollToEnd(scrollTop);\n    }\n    /**\n     * @private\n     * @param {?} height\n     * @return {?}\n     */\n\n\n    _updateVirtualHeight(height) {\n      if (this._updateScrollHeight) {\n        this._virtualPadding.style.height = `${height}px`;\n        this._updateScrollHeight = false;\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _setVirtualHeight() {\n      if (!this._virtualPadding) {\n        return;\n      }\n\n      this._virtualPadding.style.height = `0px`;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _onItemsLengthChanged() {\n      this._updateScrollHeight = true;\n    }\n    /**\n     * @private\n     * @param {?=} scrollTop\n     * @return {?}\n     */\n\n\n    _renderItemsRange(scrollTop = null) {\n      if (scrollTop && this._lastScrollPosition === scrollTop) {\n        return;\n      }\n\n      scrollTop = scrollTop || this._scrollablePanel.scrollTop;\n      /** @type {?} */\n\n      const range = this._panelService.calculateItems(scrollTop, this.itemsLength, this.bufferAmount);\n\n      this._updateVirtualHeight(range.scrollHeight);\n\n      this._contentPanel.style.transform = `translateY(${range.topPadding}px)`;\n\n      this._zone.run(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.update.emit(this.items.slice(range.start, range.end));\n        this.scroll.emit({\n          start: range.start,\n          end: range.end\n        });\n      });\n\n      if (isDefined(scrollTop) && this._lastScrollPosition === 0) {\n        this._scrollablePanel.scrollTop = scrollTop;\n        this._lastScrollPosition = scrollTop;\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _measureDimensions() {\n      if (this._panelService.dimensions.itemHeight > 0 || this.itemsLength === 0) {\n        return Promise.resolve(this._panelService.dimensions);\n      }\n\n      const [first] = this.items;\n      this.update.emit([first]);\n      return Promise.resolve().then(\n      /**\n      * @return {?}\n      */\n      () => {\n        /** @type {?} */\n        const option = this._dropdown.querySelector(`#${first.htmlId}`);\n        /** @type {?} */\n\n\n        const optionHeight = option.clientHeight;\n        this._virtualPadding.style.height = `${optionHeight * this.itemsLength}px`;\n        /** @type {?} */\n\n        const panelHeight = this._scrollablePanel.clientHeight;\n\n        this._panelService.setDimensions(optionHeight, panelHeight);\n\n        return this._panelService.dimensions;\n      });\n    }\n    /**\n     * @private\n     * @param {?} scrollTop\n     * @return {?}\n     */\n\n\n    _fireScrollToEnd(scrollTop) {\n      if (this._scrollToEndFired || scrollTop === 0) {\n        return;\n      }\n      /** @type {?} */\n\n\n      const padding = this.virtualScroll ? this._virtualPadding : this._contentPanel;\n\n      if (scrollTop + this._dropdown.clientHeight >= padding.clientHeight) {\n        this._zone.run(\n        /**\n        * @return {?}\n        */\n        () => this.scrollToEnd.emit());\n\n        this._scrollToEndFired = true;\n      }\n    }\n    /**\n     * @private\n     * @param {?} dropdownEl\n     * @return {?}\n     */\n\n\n    _calculateCurrentPosition(dropdownEl) {\n      if (this.position !== 'auto') {\n        return this.position;\n      }\n      /** @type {?} */\n\n\n      const selectRect = this._select.getBoundingClientRect();\n      /** @type {?} */\n\n\n      const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n      /** @type {?} */\n\n      const offsetTop = selectRect.top + window.pageYOffset;\n      /** @type {?} */\n\n      const height = selectRect.height;\n      /** @type {?} */\n\n      const dropdownHeight = dropdownEl.getBoundingClientRect().height;\n\n      if (offsetTop + height + dropdownHeight > scrollTop + document.documentElement.clientHeight) {\n        return 'top';\n      } else {\n        return 'bottom';\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _appendDropdown() {\n      if (!this.appendTo) {\n        return;\n      }\n\n      this._parent = document.querySelector(this.appendTo);\n\n      if (!this._parent) {\n        throw new Error(`appendTo selector ${this.appendTo} did not found any parent element`);\n      }\n\n      this._updateXPosition();\n\n      this._parent.appendChild(this._dropdown);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _updateXPosition() {\n      /** @type {?} */\n      const select = this._select.getBoundingClientRect();\n      /** @type {?} */\n\n\n      const parent = this._parent.getBoundingClientRect();\n      /** @type {?} */\n\n\n      const offsetLeft = select.left - parent.left;\n      this._dropdown.style.left = offsetLeft + 'px';\n      this._dropdown.style.width = select.width + 'px';\n      this._dropdown.style.minWidth = select.width + 'px';\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _updateYPosition() {\n      /** @type {?} */\n      const select = this._select.getBoundingClientRect();\n      /** @type {?} */\n\n\n      const parent = this._parent.getBoundingClientRect();\n      /** @type {?} */\n\n\n      const delta = select.height;\n\n      if (this._currentPosition === 'top') {\n        /** @type {?} */\n        const offsetBottom = parent.bottom - select.bottom;\n        this._dropdown.style.bottom = offsetBottom + delta + 'px';\n        this._dropdown.style.top = 'auto';\n      } else if (this._currentPosition === 'bottom') {\n        /** @type {?} */\n        const offsetTop = select.top - parent.top;\n        this._dropdown.style.top = offsetTop + delta + 'px';\n        this._dropdown.style.bottom = 'auto';\n      }\n    }\n\n  }\n\n  NgDropdownPanelComponent.ɵfac = function NgDropdownPanelComponent_Factory(t) {\n    return new (t || NgDropdownPanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NgDropdownPanelService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8));\n  };\n\n  NgDropdownPanelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgDropdownPanelComponent,\n    selectors: [[\"ng-dropdown-panel\"]],\n    viewQuery: function NgDropdownPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7, ElementRef);\n        ɵngcc0.ɵɵviewQuery(_c1, 7, ElementRef);\n        ɵngcc0.ɵɵviewQuery(_c2, 7, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentElementRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollElementRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.paddingElementRef = _t.first);\n      }\n    },\n    hostBindings: function NgDropdownPanelComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NgDropdownPanelComponent_mousedown_HostBindingHandler($event) {\n          return ctx.handleMousedown($event);\n        });\n      }\n    },\n    inputs: {\n      items: \"items\",\n      position: \"position\",\n      virtualScroll: \"virtualScroll\",\n      filterValue: \"filterValue\",\n      markedItem: \"markedItem\",\n      appendTo: \"appendTo\",\n      bufferAmount: \"bufferAmount\",\n      headerTemplate: \"headerTemplate\",\n      footerTemplate: \"footerTemplate\"\n    },\n    outputs: {\n      update: \"update\",\n      scroll: \"scroll\",\n      scrollToEnd: \"scrollToEnd\",\n      outsideClick: \"outsideClick\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c4,\n    decls: 9,\n    vars: 6,\n    consts: [[\"class\", \"ng-dropdown-header\", 4, \"ngIf\"], [1, \"ng-dropdown-panel-items\", \"scroll-host\"], [\"scroll\", \"\"], [\"padding\", \"\"], [\"content\", \"\"], [\"class\", \"ng-dropdown-footer\", 4, \"ngIf\"], [1, \"ng-dropdown-header\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ng-dropdown-footer\"]],\n    template: function NgDropdownPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NgDropdownPanelComponent_div_0_Template, 2, 4, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵelement(3, \"div\", null, 3);\n        ɵngcc0.ɵɵelementStart(5, \"div\", null, 4);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵtemplate(8, NgDropdownPanelComponent_div_8_Template, 2, 4, \"div\", 5);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.headerTemplate);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵclassProp(\"total-padding\", ctx.virtualScroll);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"scrollable-content\", ctx.virtualScroll && ctx.items.length);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.footerTemplate);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n\n  return NgDropdownPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgDropdownPanelComponent.prototype.items;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.markedItem;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.position;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.appendTo;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.bufferAmount;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.virtualScroll;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.headerTemplate;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.footerTemplate;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.filterValue;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.update;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.scroll;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.scrollToEnd;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.outsideClick;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.contentElementRef;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.scrollElementRef;\n  /** @type {?} */\n\n  NgDropdownPanelComponent.prototype.paddingElementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._destroy$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._dropdown;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._virtualPadding;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._scrollablePanel;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._contentPanel;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._select;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._parent;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._scrollToEndFired;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._updateScrollHeight;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._lastScrollPosition;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._currentPosition;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._itemsLength;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._zone;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._panelService;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgDropdownPanelComponent.prototype._document;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ng-option.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet NgOptionComponent = /*#__PURE__*/(() => {\n  class NgOptionComponent {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.stateChange$ = new Subject();\n      this._disabled = false;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get disabled() {\n      return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set disabled(value) {\n      this._disabled = this._isDisabled(value);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get label() {\n      return (this.elementRef.nativeElement.textContent || '').trim();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if (changes.disabled) {\n        this.stateChange$.next({\n          value: this.value,\n          disabled: this._disabled\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterViewChecked() {\n      if (this.label !== this._previousLabel) {\n        this._previousLabel = this.label;\n        this.stateChange$.next({\n          value: this.value,\n          disabled: this._disabled,\n          label: this.elementRef.nativeElement.innerHTML\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      this.stateChange$.complete();\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    _isDisabled(value) {\n      return value != null && `${value}` !== 'false';\n    }\n\n  }\n\n  NgOptionComponent.ɵfac = function NgOptionComponent_Factory(t) {\n    return new (t || NgOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NgOptionComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgOptionComponent,\n    selectors: [[\"ng-option\"]],\n    inputs: {\n      disabled: \"disabled\",\n      value: \"value\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c4,\n    decls: 1,\n    vars: 0,\n    template: function NgOptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n\n  return NgOptionComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgOptionComponent.prototype.value;\n  /** @type {?} */\n\n  NgOptionComponent.prototype.stateChange$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgOptionComponent.prototype._disabled;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgOptionComponent.prototype._previousLabel;\n  /** @type {?} */\n\n  NgOptionComponent.prototype.elementRef;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/config.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet NgSelectConfig = /*#__PURE__*/(() => {\n  class NgSelectConfig {\n    constructor() {\n      this.notFoundText = 'No items found';\n      this.typeToSearchText = 'Type to search';\n      this.addTagText = 'Add item';\n      this.loadingText = 'Loading...';\n      this.clearAllText = 'Clear all';\n      this.disableVirtualScroll = true;\n      this.openOnEnter = true;\n      this.appearance = 'underline';\n    }\n\n  }\n\n  NgSelectConfig.ɵfac = function NgSelectConfig_Factory(t) {\n    return new (t || NgSelectConfig)();\n  };\n  /** @nocollapse */\n\n\n  NgSelectConfig.ɵprov = ɵɵdefineInjectable({\n    factory: function NgSelectConfig_Factory() {\n      return new NgSelectConfig();\n    },\n    token: NgSelectConfig,\n    providedIn: \"root\"\n  });\n  return NgSelectConfig;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgSelectConfig.prototype.placeholder;\n  /** @type {?} */\n\n  NgSelectConfig.prototype.notFoundText;\n  /** @type {?} */\n\n  NgSelectConfig.prototype.typeToSearchText;\n  /** @type {?} */\n\n  NgSelectConfig.prototype.addTagText;\n  /** @type {?} */\n\n  NgSelectConfig.prototype.loadingText;\n  /** @type {?} */\n\n  NgSelectConfig.prototype.clearAllText;\n  /** @type {?} */\n\n  NgSelectConfig.prototype.disableVirtualScroll;\n  /** @type {?} */\n\n  NgSelectConfig.prototype.openOnEnter;\n  /** @type {?} */\n\n  NgSelectConfig.prototype.appendTo;\n  /** @type {?} */\n\n  NgSelectConfig.prototype.bindValue;\n  /** @type {?} */\n\n  NgSelectConfig.prototype.appearance;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ng-select.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst SELECTION_MODEL_FACTORY = new InjectionToken('ng-select-selection-model');\nlet NgSelectComponent = /*#__PURE__*/(() => {\n  class NgSelectComponent {\n    /**\n     * @param {?} classes\n     * @param {?} autoFocus\n     * @param {?} config\n     * @param {?} newSelectionModel\n     * @param {?} _elementRef\n     * @param {?} _cd\n     * @param {?} _console\n     */\n    constructor(classes, autoFocus, config, newSelectionModel, _elementRef, _cd, _console) {\n      this.classes = classes;\n      this.autoFocus = autoFocus;\n      this._cd = _cd;\n      this._console = _console;\n      this.markFirst = true;\n      this.dropdownPosition = 'auto';\n      this.loading = false;\n      this.closeOnSelect = true;\n      this.hideSelected = false;\n      this.selectOnTab = false;\n      this.bufferAmount = 4;\n      this.selectableGroup = false;\n      this.selectableGroupAsModel = true;\n      this.searchFn = null;\n      this.trackByFn = null;\n      this.clearOnBackspace = true;\n      this.labelForId = null;\n      this.inputAttrs = {};\n      this.readonly = false;\n      this.searchWhileComposing = true;\n      this.minTermLength = 0;\n      this.editableSearchTerm = false;\n\n      this.keyDownFn =\n      /**\n      * @param {?} _\n      * @return {?}\n      */\n      _ => true;\n\n      this.multiple = false;\n      this.addTag = false;\n      this.searchable = true;\n      this.clearable = true;\n      this.isOpen = false; // output events\n\n      this.blurEvent = new EventEmitter();\n      this.focusEvent = new EventEmitter();\n      this.changeEvent = new EventEmitter();\n      this.openEvent = new EventEmitter();\n      this.closeEvent = new EventEmitter();\n      this.searchEvent = new EventEmitter();\n      this.clearEvent = new EventEmitter();\n      this.addEvent = new EventEmitter();\n      this.removeEvent = new EventEmitter();\n      this.scroll = new EventEmitter();\n      this.scrollToEnd = new EventEmitter();\n      this.viewPortItems = [];\n      this.searchTerm = null;\n      this.dropdownId = newId();\n      this.escapeHTML = true;\n      this.useDefaultClass = true;\n      this._items = [];\n      this._defaultLabel = 'label';\n      this._pressedKeys = [];\n      this._isComposing = false;\n      this._destroy$ = new Subject();\n      this._keyPress$ = new Subject();\n\n      this._onChange =\n      /**\n      * @param {?} _\n      * @return {?}\n      */\n      _ => {};\n\n      this._onTouched =\n      /**\n      * @return {?}\n      */\n      () => {};\n\n      this.clearItem =\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      item => {\n        /** @type {?} */\n        const option = this.selectedItems.find(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        x => x.value === item);\n        this.unselect(option);\n      };\n\n      this.trackByOption =\n      /**\n      * @param {?} _\n      * @param {?} item\n      * @return {?}\n      */\n      (_, item) => {\n        if (this.trackByFn) {\n          return this.trackByFn(item.value);\n        }\n\n        return item;\n      };\n\n      this._mergeGlobalConfig(config);\n\n      this.itemsList = new ItemsList(this, newSelectionModel());\n      this.element = _elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get items() {\n      return this._items;\n    }\n\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set items(value) {\n      this._itemsAreUsed = true;\n      this._items = value;\n    }\n\n    /**\n     * @return {?}\n     */\n    get compareWith() {\n      return this._compareWith;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n\n    set compareWith(fn) {\n      if (!isFunction(fn)) {\n        throw Error('`compareWith` must be a function.');\n      }\n\n      this._compareWith = fn;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get clearSearchOnAdd() {\n      return isDefined(this._clearSearchOnAdd) ? this._clearSearchOnAdd : this.closeOnSelect;\n    }\n\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set clearSearchOnAdd(value) {\n      this._clearSearchOnAdd = value;\n    }\n\n    /**\n     * @return {?}\n     */\n    get disabled() {\n      return this.readonly || this._disabled;\n    }\n\n    /**\n     * @return {?}\n     */\n    get filtered() {\n      return !!this.searchTerm && this.searchable || this._isComposing;\n    }\n\n    /**\n     * @private\n     * @return {?}\n     */\n    get _editableSearchTerm() {\n      return this.editableSearchTerm && !this.multiple;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get selectedItems() {\n      return this.itemsList.selectedItems;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get selectedValues() {\n      return this.selectedItems.map(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => x.value);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get hasValue() {\n      return this.selectedItems.length > 0;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get currentPanelPosition() {\n      if (this.dropdownPanel) {\n        return this.dropdownPanel.currentPosition;\n      }\n\n      return undefined;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnInit() {\n      this._handleKeyPresses();\n\n      this._setInputAttributes();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if (changes.multiple) {\n        this.itemsList.clearSelected();\n      }\n\n      if (changes.items) {\n        this._setItems(changes.items.currentValue || []);\n      }\n\n      if (changes.isOpen) {\n        this._manualOpen = isDefined(changes.isOpen.currentValue);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterViewInit() {\n      if (!this._itemsAreUsed) {\n        this.escapeHTML = false;\n\n        this._setItemsFromNgOptions();\n      }\n\n      if (isDefined(this.autoFocus)) {\n        this.focus();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      this._destroy$.next();\n\n      this._destroy$.complete();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    handleKeyDown($event) {\n      /** @type {?} */\n      const keyCode = KeyCode[$event.which];\n\n      if (keyCode) {\n        if (this.keyDownFn($event) === false) {\n          return;\n        }\n\n        this.handleKeyCode($event);\n      } else if ($event.key && $event.key.length === 1) {\n        this._keyPress$.next($event.key.toLocaleLowerCase());\n      }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    handleKeyCode($event) {\n      switch ($event.which) {\n        case KeyCode.ArrowDown:\n          this._handleArrowDown($event);\n\n          break;\n\n        case KeyCode.ArrowUp:\n          this._handleArrowUp($event);\n\n          break;\n\n        case KeyCode.Space:\n          this._handleSpace($event);\n\n          break;\n\n        case KeyCode.Enter:\n          this._handleEnter($event);\n\n          break;\n\n        case KeyCode.Tab:\n          this._handleTab($event);\n\n          break;\n\n        case KeyCode.Esc:\n          this.close();\n          $event.preventDefault();\n          break;\n\n        case KeyCode.Backspace:\n          this._handleBackspace();\n\n          break;\n      }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    handleMousedown($event) {\n      /** @type {?} */\n      const target =\n      /** @type {?} */\n      $event.target;\n\n      if (target.tagName !== 'INPUT') {\n        $event.preventDefault();\n      }\n\n      if (target.classList.contains('ng-clear-wrapper')) {\n        this.handleClearClick();\n        return;\n      }\n\n      if (target.classList.contains('ng-arrow-wrapper')) {\n        this.handleArrowClick();\n        return;\n      }\n\n      if (target.classList.contains('ng-value-icon')) {\n        return;\n      }\n\n      if (!this.focused) {\n        this.focus();\n      }\n\n      if (this.searchable) {\n        this.open();\n      } else {\n        this.toggle();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    handleArrowClick() {\n      if (this.isOpen) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    handleClearClick() {\n      if (this.hasValue) {\n        this.itemsList.clearSelected(true);\n\n        this._updateNgModel();\n      }\n\n      this._clearSearch();\n\n      this.focus();\n      this.clearEvent.emit();\n\n      this._onSelectionChanged();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    clearModel() {\n      if (!this.clearable) {\n        return;\n      }\n\n      this.itemsList.clearSelected();\n\n      this._updateNgModel();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    writeValue(value) {\n      this.itemsList.clearSelected();\n\n      this._handleWriteValue(value);\n\n      this._cd.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n\n\n    setDisabledState(state) {\n      this._disabled = state;\n\n      this._cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    toggle() {\n      if (!this.isOpen) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    open() {\n      if (this.disabled || this.isOpen || this.itemsList.maxItemsSelected || this._manualOpen) {\n        return;\n      }\n\n      if (!this._isTypeahead && !this.addTag && this.itemsList.noItemsToSelect) {\n        return;\n      }\n\n      this.isOpen = true;\n      this.itemsList.markSelectedOrDefault(this.markFirst);\n      this.openEvent.emit();\n\n      if (!this.searchTerm) {\n        this.focus();\n      }\n\n      this.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    close() {\n      if (!this.isOpen || this._manualOpen) {\n        return;\n      }\n\n      this.isOpen = false;\n      this._isComposing = false;\n\n      if (!this._editableSearchTerm) {\n        this._clearSearch();\n      } else {\n        this.itemsList.resetFilteredItems();\n      }\n\n      this.itemsList.unmarkItem();\n\n      this._onTouched();\n\n      this.closeEvent.emit();\n\n      this._cd.markForCheck();\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n\n\n    toggleItem(item) {\n      if (!item || item.disabled || this.disabled) {\n        return;\n      }\n\n      if (this.multiple && item.selected) {\n        this.unselect(item);\n      } else {\n        this.select(item);\n      }\n\n      if (this._editableSearchTerm) {\n        this._setSearchTermFromItems();\n      }\n\n      this._onSelectionChanged();\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n\n\n    select(item) {\n      if (!item.selected) {\n        this.itemsList.select(item);\n\n        if (this.clearSearchOnAdd && !this._editableSearchTerm) {\n          this._clearSearch();\n        }\n\n        this._updateNgModel();\n\n        if (this.multiple) {\n          this.addEvent.emit(item.value);\n        }\n      }\n\n      if (this.closeOnSelect || this.itemsList.noItemsToSelect) {\n        this.close();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    focus() {\n      this.searchInput.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    blur() {\n      this.searchInput.nativeElement.blur();\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n\n\n    unselect(item) {\n      if (!item) {\n        return;\n      }\n\n      this.itemsList.unselect(item);\n      this.focus();\n\n      this._updateNgModel();\n\n      this.removeEvent.emit(item);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    selectTag() {\n      /** @type {?} */\n      let tag;\n\n      if (isFunction(this.addTag)) {\n        tag =\n        /** @type {?} */\n        this.addTag(this.searchTerm);\n      } else {\n        tag = this._primitive ? this.searchTerm : {\n          [this.bindLabel]: this.searchTerm\n        };\n      }\n      /** @type {?} */\n\n\n      const handleTag =\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      item => this._isTypeahead || !this.isOpen ? this.itemsList.mapItem(item, null) : this.itemsList.addItem(item);\n\n      if (isPromise(tag)) {\n        tag.then(\n        /**\n        * @param {?} item\n        * @return {?}\n        */\n        item => this.select(handleTag(item))).catch(\n        /**\n        * @return {?}\n        */\n        () => {});\n      } else if (tag) {\n        this.select(handleTag(tag));\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    showClear() {\n      return this.clearable && (this.hasValue || this.searchTerm) && !this.disabled;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get showAddTag() {\n      if (!this._validTerm) {\n        return false;\n      }\n      /** @type {?} */\n\n\n      const term = this.searchTerm.toLowerCase().trim();\n      return this.addTag && !this.itemsList.filteredItems.some(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => x.label.toLowerCase() === term) && (!this.hideSelected && this.isOpen || !this.selectedItems.some(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => x.label.toLowerCase() === term)) && !this.loading;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    showNoItemsFound() {\n      /** @type {?} */\n      const empty = this.itemsList.filteredItems.length === 0;\n      return (empty && !this._isTypeahead && !this.loading || empty && this._isTypeahead && this._validTerm && !this.loading) && !this.showAddTag;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    showTypeToSearch() {\n      /** @type {?} */\n      const empty = this.itemsList.filteredItems.length === 0;\n      return empty && this._isTypeahead && !this._validTerm && !this.loading;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    onCompositionStart() {\n      this._isComposing = true;\n    }\n    /**\n     * @param {?} term\n     * @return {?}\n     */\n\n\n    onCompositionEnd(term) {\n      this._isComposing = false;\n\n      if (this.searchWhileComposing) {\n        return;\n      }\n\n      this.filter(term);\n    }\n    /**\n     * @param {?} term\n     * @return {?}\n     */\n\n\n    filter(term) {\n      if (this._isComposing && !this.searchWhileComposing) {\n        return;\n      }\n\n      this.searchTerm = term;\n\n      if (this._isTypeahead && (this._validTerm || this.minTermLength === 0)) {\n        this.typeahead.next(term);\n      }\n\n      if (!this._isTypeahead) {\n        this.itemsList.filter(this.searchTerm);\n\n        if (this.isOpen) {\n          this.itemsList.markSelectedOrDefault(this.markFirst);\n        }\n      }\n\n      this.searchEvent.emit({\n        term,\n        items: this.itemsList.filteredItems.map(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        x => x.value)\n      });\n      this.open();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    onInputFocus($event) {\n      if (this.focused) {\n        return;\n      }\n\n      if (this._editableSearchTerm) {\n        this._setSearchTermFromItems();\n      }\n\n      this.element.classList.add('ng-select-focused');\n      this.focusEvent.emit($event);\n      this.focused = true;\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    onInputBlur($event) {\n      this.element.classList.remove('ng-select-focused');\n      this.blurEvent.emit($event);\n\n      if (!this.isOpen && !this.disabled) {\n        this._onTouched();\n      }\n\n      if (this._editableSearchTerm) {\n        this._setSearchTermFromItems();\n      }\n\n      this.focused = false;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n\n\n    onItemHover(item) {\n      if (item.disabled) {\n        return;\n      }\n\n      this.itemsList.markItem(item);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    detectChanges() {\n      if (!\n      /** @type {?} */\n      this._cd.destroyed) {\n        this._cd.detectChanges();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _setSearchTermFromItems() {\n      /** @type {?} */\n      const selected = this.selectedItems && this.selectedItems[0];\n      this.searchTerm = selected && selected.label || null;\n    }\n    /**\n     * @private\n     * @param {?} items\n     * @return {?}\n     */\n\n\n    _setItems(items) {\n      /** @type {?} */\n      const firstItem = items[0];\n      this.bindLabel = this.bindLabel || this._defaultLabel;\n      this._primitive = isDefined(firstItem) ? !isObject(firstItem) : this._primitive || this.bindLabel === this._defaultLabel;\n      this.itemsList.setItems(items);\n\n      if (items.length > 0 && this.hasValue) {\n        this.itemsList.mapSelectedItems();\n      }\n\n      if (this.isOpen && isDefined(this.searchTerm) && !this._isTypeahead) {\n        this.itemsList.filter(this.searchTerm);\n      }\n\n      if (this._isTypeahead || this.isOpen) {\n        this.itemsList.markSelectedOrDefault(this.markFirst);\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _setItemsFromNgOptions() {\n      /** @type {?} */\n      const mapNgOptions =\n      /**\n      * @param {?} options\n      * @return {?}\n      */\n      options => {\n        this.items = options.map(\n        /**\n        * @param {?} option\n        * @return {?}\n        */\n        option => ({\n          $ngOptionValue: option.value,\n          $ngOptionLabel: option.elementRef.nativeElement.innerHTML,\n          disabled: option.disabled\n        }));\n        this.itemsList.setItems(this.items);\n\n        if (this.hasValue) {\n          this.itemsList.mapSelectedItems();\n        }\n\n        this.detectChanges();\n      };\n      /** @type {?} */\n\n\n      const handleOptionChange =\n      /**\n      * @return {?}\n      */\n      () => {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.ngOptions.changes, this._destroy$);\n        merge(...this.ngOptions.map(\n        /**\n        * @param {?} option\n        * @return {?}\n        */\n        option => option.stateChange$)).pipe(takeUntil(changedOrDestroyed)).subscribe(\n        /**\n        * @param {?} option\n        * @return {?}\n        */\n        option => {\n          /** @type {?} */\n          const item = this.itemsList.findItem(option.value);\n          item.disabled = option.disabled;\n          item.label = option.label || item.label;\n\n          this._cd.detectChanges();\n        });\n      };\n\n      this.ngOptions.changes.pipe(startWith(this.ngOptions), takeUntil(this._destroy$)).subscribe(\n      /**\n      * @param {?} options\n      * @return {?}\n      */\n      options => {\n        this.bindLabel = this._defaultLabel;\n        mapNgOptions(options);\n        handleOptionChange();\n      });\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    _isValidWriteValue(value) {\n      if (!isDefined(value) || this.multiple && value === '' || Array.isArray(value) && value.length === 0) {\n        return false;\n      }\n      /** @type {?} */\n\n\n      const validateBinding =\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      item => {\n        if (!isDefined(this.compareWith) && isObject(item) && this.bindValue) {\n          this._console.warn(`Setting object(${JSON.stringify(item)}) as your model with bindValue is not allowed unless [compareWith] is used.`);\n\n          return false;\n        }\n\n        return true;\n      };\n\n      if (this.multiple) {\n        if (!Array.isArray(value)) {\n          this._console.warn('Multiple select ngModel should be array.');\n\n          return false;\n        }\n\n        return value.every(\n        /**\n        * @param {?} item\n        * @return {?}\n        */\n        item => validateBinding(item));\n      } else {\n        return validateBinding(value);\n      }\n    }\n    /**\n     * @private\n     * @param {?} ngModel\n     * @return {?}\n     */\n\n\n    _handleWriteValue(ngModel) {\n      if (!this._isValidWriteValue(ngModel)) {\n        return;\n      }\n      /** @type {?} */\n\n\n      const select =\n      /**\n      * @param {?} val\n      * @return {?}\n      */\n      val => {\n        /** @type {?} */\n        let item = this.itemsList.findItem(val);\n\n        if (item) {\n          this.itemsList.select(item);\n        } else {\n          /** @type {?} */\n          const isValObject = isObject(val);\n          /** @type {?} */\n\n          const isPrimitive = !isValObject && !this.bindValue;\n\n          if (isValObject || isPrimitive) {\n            this.itemsList.select(this.itemsList.mapItem(val, null));\n          } else if (this.bindValue) {\n            item = {\n              [this.bindLabel]: null,\n              [this.bindValue]: val\n            };\n            this.itemsList.select(this.itemsList.mapItem(item, null));\n          }\n        }\n      };\n\n      if (this.multiple) {\n        /** @type {?} */\n        ngModel.forEach(\n        /**\n        * @param {?} item\n        * @return {?}\n        */\n        item => select(item));\n      } else {\n        select(ngModel);\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _handleKeyPresses() {\n      if (this.searchable) {\n        return;\n      }\n\n      this._keyPress$.pipe(takeUntil(this._destroy$), tap(\n      /**\n      * @param {?} letter\n      * @return {?}\n      */\n      letter => this._pressedKeys.push(letter)), debounceTime(200), filter(\n      /**\n      * @return {?}\n      */\n      () => this._pressedKeys.length > 0), map(\n      /**\n      * @return {?}\n      */\n      () => this._pressedKeys.join(''))).subscribe(\n      /**\n      * @param {?} term\n      * @return {?}\n      */\n      term => {\n        /** @type {?} */\n        const item = this.itemsList.findByLabel(term);\n\n        if (item) {\n          if (this.isOpen) {\n            this.itemsList.markItem(item);\n\n            this._cd.markForCheck();\n          } else {\n            this.select(item);\n          }\n        }\n\n        this._pressedKeys = [];\n      });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _setInputAttributes() {\n      /** @type {?} */\n      const input = this.searchInput.nativeElement;\n      /** @type {?} */\n\n      const attributes = Object.assign({\n        type: 'text',\n        autocorrect: 'off',\n        autocapitalize: 'off',\n        autocomplete: this.labelForId ? 'off' : this.dropdownId\n      }, this.inputAttrs);\n\n      for (const key of Object.keys(attributes)) {\n        input.setAttribute(key, attributes[key]);\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _updateNgModel() {\n      /** @type {?} */\n      const model = [];\n\n      for (const item of this.selectedItems) {\n        if (this.bindValue) {\n          /** @type {?} */\n          let value = null;\n\n          if (item.children) {\n            /** @type {?} */\n            const groupKey = this.groupValue ? this.bindValue :\n            /** @type {?} */\n            this.groupBy;\n            value = item.value[groupKey ||\n            /** @type {?} */\n            this.groupBy];\n          } else {\n            value = this.itemsList.resolveNested(item.value, this.bindValue);\n          }\n\n          model.push(value);\n        } else {\n          model.push(item.value);\n        }\n      }\n      /** @type {?} */\n\n\n      const selected = this.selectedItems.map(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      x => x.value);\n\n      if (this.multiple) {\n        this._onChange(model);\n\n        this.changeEvent.emit(selected);\n      } else {\n        this._onChange(isDefined(model[0]) ? model[0] : null);\n\n        this.changeEvent.emit(selected[0]);\n      }\n\n      this._cd.markForCheck();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _clearSearch() {\n      if (!this.searchTerm) {\n        return;\n      }\n\n      this._changeSearch(null);\n\n      this.itemsList.resetFilteredItems();\n    }\n    /**\n     * @private\n     * @param {?} searchTerm\n     * @return {?}\n     */\n\n\n    _changeSearch(searchTerm) {\n      this.searchTerm = searchTerm;\n\n      if (this._isTypeahead) {\n        this.typeahead.next(searchTerm);\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _scrollToMarked() {\n      if (!this.isOpen || !this.dropdownPanel) {\n        return;\n      }\n\n      this.dropdownPanel.scrollTo(this.itemsList.markedItem);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _scrollToTag() {\n      if (!this.isOpen || !this.dropdownPanel) {\n        return;\n      }\n\n      this.dropdownPanel.scrollToTag();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _onSelectionChanged() {\n      if (this.isOpen && this.multiple && this.appendTo) {\n        // Make sure items are rendered.\n        this._cd.detectChanges();\n\n        this.dropdownPanel.adjustPosition();\n      }\n    }\n    /**\n     * @private\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    _handleTab($event) {\n      if (this.isOpen === false && !this.addTag) {\n        return;\n      }\n\n      if (this.selectOnTab) {\n        if (this.itemsList.markedItem) {\n          this.toggleItem(this.itemsList.markedItem);\n          $event.preventDefault();\n        } else if (this.showAddTag) {\n          this.selectTag();\n          $event.preventDefault();\n        } else {\n          this.close();\n        }\n      } else {\n        this.close();\n      }\n    }\n    /**\n     * @private\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    _handleEnter($event) {\n      if (this.isOpen || this._manualOpen) {\n        if (this.itemsList.markedItem) {\n          this.toggleItem(this.itemsList.markedItem);\n        } else if (this.showAddTag) {\n          this.selectTag();\n        }\n      } else if (this.openOnEnter) {\n        this.open();\n      } else {\n        return;\n      }\n\n      $event.preventDefault();\n    }\n    /**\n     * @private\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    _handleSpace($event) {\n      if (this.isOpen || this._manualOpen) {\n        return;\n      }\n\n      this.open();\n      $event.preventDefault();\n    }\n    /**\n     * @private\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    _handleArrowDown($event) {\n      if (this._nextItemIsTag(+1)) {\n        this.itemsList.unmarkItem();\n\n        this._scrollToTag();\n      } else {\n        this.itemsList.markNextItem();\n\n        this._scrollToMarked();\n      }\n\n      this.open();\n      $event.preventDefault();\n    }\n    /**\n     * @private\n     * @param {?} $event\n     * @return {?}\n     */\n\n\n    _handleArrowUp($event) {\n      if (!this.isOpen) {\n        return;\n      }\n\n      if (this._nextItemIsTag(-1)) {\n        this.itemsList.unmarkItem();\n\n        this._scrollToTag();\n      } else {\n        this.itemsList.markPreviousItem();\n\n        this._scrollToMarked();\n      }\n\n      $event.preventDefault();\n    }\n    /**\n     * @private\n     * @param {?} nextStep\n     * @return {?}\n     */\n\n\n    _nextItemIsTag(nextStep) {\n      /** @type {?} */\n      const nextIndex = this.itemsList.markedIndex + nextStep;\n      return this.addTag && this.searchTerm && this.itemsList.markedItem && (nextIndex < 0 || nextIndex === this.itemsList.filteredItems.length);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _handleBackspace() {\n      if (this.searchTerm || !this.clearable || !this.clearOnBackspace || !this.hasValue) {\n        return;\n      }\n\n      if (this.multiple) {\n        this.unselect(this.itemsList.lastSelectedItem);\n      } else {\n        this.clearModel();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    get _isTypeahead() {\n      return this.typeahead && this.typeahead.observers.length > 0;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    get _validTerm() {\n      /** @type {?} */\n      const term = this.searchTerm && this.searchTerm.trim();\n      return term && term.length >= this.minTermLength;\n    }\n    /**\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n\n\n    _mergeGlobalConfig(config) {\n      this.placeholder = this.placeholder || config.placeholder;\n      this.notFoundText = this.notFoundText || config.notFoundText;\n      this.typeToSearchText = this.typeToSearchText || config.typeToSearchText;\n      this.addTagText = this.addTagText || config.addTagText;\n      this.loadingText = this.loadingText || config.loadingText;\n      this.clearAllText = this.clearAllText || config.clearAllText;\n      this.virtualScroll = isDefined(this.virtualScroll) ? this.virtualScroll : isDefined(config.disableVirtualScroll) ? !config.disableVirtualScroll : false;\n      this.openOnEnter = isDefined(this.openOnEnter) ? this.openOnEnter : config.openOnEnter;\n      this.appendTo = this.appendTo || config.appendTo;\n      this.bindValue = this.bindValue || config.bindValue;\n      this.appearance = this.appearance || config.appearance;\n    }\n\n  }\n\n  NgSelectComponent.ɵfac = function NgSelectComponent_Factory(t) {\n    return new (t || NgSelectComponent)(ɵngcc0.ɵɵinjectAttribute('class'), ɵngcc0.ɵɵinjectAttribute('autofocus'), ɵngcc0.ɵɵdirectiveInject(NgSelectConfig), ɵngcc0.ɵɵdirectiveInject(SELECTION_MODEL_FACTORY), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ConsoleService));\n  };\n\n  NgSelectComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgSelectComponent,\n    selectors: [[\"ng-select\"]],\n    contentQueries: function NgSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgOptionTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgOptgroupTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgLabelTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgMultiLabelTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgHeaderTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgFooterTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgNotFoundTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgTypeToSearchTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgLoadingTextTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgTagTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgLoadingSpinnerTemplateDirective, 5, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgOptionComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optgroupTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.labelTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiLabelTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.notFoundTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.typeToSearchTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loadingTextTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tagTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loadingSpinnerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ngOptions = _t);\n      }\n    },\n    viewQuery: function NgSelectComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NgDropdownPanelComponent, 5);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownPanel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchInput = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"listbox\"],\n    hostVars: 20,\n    hostBindings: function NgSelectComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function NgSelectComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyDown($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-select\", ctx.useDefaultClass)(\"ng-select-single\", !ctx.multiple)(\"ng-select-multiple\", ctx.multiple)(\"ng-select-taggable\", ctx.addTag)(\"ng-select-searchable\", ctx.searchable)(\"ng-select-clearable\", ctx.clearable)(\"ng-select-opened\", ctx.isOpen)(\"ng-select-disabled\", ctx.disabled)(\"ng-select-filtered\", ctx.filtered)(\"ng-select-typeahead\", ctx.typeahead);\n      }\n    },\n    inputs: {\n      markFirst: \"markFirst\",\n      dropdownPosition: \"dropdownPosition\",\n      loading: \"loading\",\n      closeOnSelect: \"closeOnSelect\",\n      hideSelected: \"hideSelected\",\n      selectOnTab: \"selectOnTab\",\n      bufferAmount: \"bufferAmount\",\n      selectableGroup: \"selectableGroup\",\n      selectableGroupAsModel: \"selectableGroupAsModel\",\n      searchFn: \"searchFn\",\n      trackByFn: \"trackByFn\",\n      clearOnBackspace: \"clearOnBackspace\",\n      labelForId: \"labelForId\",\n      inputAttrs: \"inputAttrs\",\n      readonly: \"readonly\",\n      searchWhileComposing: \"searchWhileComposing\",\n      minTermLength: \"minTermLength\",\n      editableSearchTerm: \"editableSearchTerm\",\n      keyDownFn: \"keyDownFn\",\n      multiple: \"multiple\",\n      addTag: \"addTag\",\n      searchable: \"searchable\",\n      clearable: \"clearable\",\n      isOpen: \"isOpen\",\n      items: \"items\",\n      compareWith: \"compareWith\",\n      clearSearchOnAdd: \"clearSearchOnAdd\",\n      bindLabel: \"bindLabel\",\n      placeholder: \"placeholder\",\n      notFoundText: \"notFoundText\",\n      typeToSearchText: \"typeToSearchText\",\n      addTagText: \"addTagText\",\n      loadingText: \"loadingText\",\n      clearAllText: \"clearAllText\",\n      virtualScroll: \"virtualScroll\",\n      openOnEnter: \"openOnEnter\",\n      appendTo: \"appendTo\",\n      bindValue: \"bindValue\",\n      appearance: \"appearance\",\n      maxSelectedItems: \"maxSelectedItems\",\n      groupBy: \"groupBy\",\n      groupValue: \"groupValue\",\n      tabIndex: \"tabIndex\",\n      typeahead: \"typeahead\"\n    },\n    outputs: {\n      blurEvent: \"blur\",\n      focusEvent: \"focus\",\n      changeEvent: \"change\",\n      openEvent: \"open\",\n      closeEvent: \"close\",\n      searchEvent: \"search\",\n      clearEvent: \"clear\",\n      addEvent: \"add\",\n      removeEvent: \"remove\",\n      scroll: \"scroll\",\n      scrollToEnd: \"scrollToEnd\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(\n      /**\n      * @return {?}\n      */\n      () => NgSelectComponent),\n      multi: true\n    }, NgDropdownPanelService]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 14,\n    vars: 18,\n    consts: [[1, \"ng-select-container\", 3, \"mousedown\"], [1, \"ng-value-container\"], [1, \"ng-placeholder\"], [4, \"ngIf\"], [1, \"ng-input\"], [\"role\", \"combobox\", 3, \"readOnly\", \"disabled\", \"value\", \"input\", \"compositionstart\", \"compositionend\", \"focus\", \"blur\", \"change\"], [\"searchInput\", \"\"], [\"class\", \"ng-clear-wrapper\", 3, \"title\", 4, \"ngIf\"], [1, \"ng-arrow-wrapper\"], [1, \"ng-arrow\"], [\"class\", \"ng-dropdown-panel\", 3, \"virtualScroll\", \"bufferAmount\", \"appendTo\", \"position\", \"headerTemplate\", \"footerTemplate\", \"filterValue\", \"items\", \"markedItem\", \"ng-select-multiple\", \"ngClass\", \"id\", \"update\", \"scroll\", \"scrollToEnd\", \"outsideClick\", 4, \"ngIf\"], [\"class\", \"ng-value\", 3, \"ng-value-disabled\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ng-value\"], [\"defaultLabelTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-hidden\", \"true\", 1, \"ng-value-icon\", \"left\", 3, \"click\"], [1, \"ng-value-label\", 3, \"ngItemLabel\", \"escape\"], [\"defaultLoadingSpinnerTemplate\", \"\"], [3, \"ngTemplateOutlet\"], [1, \"ng-spinner-loader\"], [1, \"ng-clear-wrapper\", 3, \"title\"], [\"aria-hidden\", \"true\", 1, \"ng-clear\"], [1, \"ng-dropdown-panel\", 3, \"virtualScroll\", \"bufferAmount\", \"appendTo\", \"position\", \"headerTemplate\", \"footerTemplate\", \"filterValue\", \"items\", \"markedItem\", \"ngClass\", \"id\", \"update\", \"scroll\", \"scrollToEnd\", \"outsideClick\"], [\"class\", \"ng-option\", 3, \"ng-option-disabled\", \"ng-option-selected\", \"ng-optgroup\", \"ng-option\", \"ng-option-child\", \"ng-option-marked\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"ng-option\", \"role\", \"option\", 3, \"ng-option-marked\", \"mouseover\", \"click\", 4, \"ngIf\"], [1, \"ng-option\", 3, \"click\", \"mouseover\"], [\"defaultOptionTemplate\", \"\"], [1, \"ng-option-label\", 3, \"ngItemLabel\", \"escape\"], [\"role\", \"option\", 1, \"ng-option\", 3, \"mouseover\", \"click\"], [\"defaultTagTemplate\", \"\"], [1, \"ng-tag-label\"], [\"defaultNotFoundTemplate\", \"\"], [1, \"ng-option\", \"ng-option-disabled\"], [\"defaultTypeToSearchTemplate\", \"\"], [\"defaultLoadingTextTemplate\", \"\"]],\n    template: function NgSelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r52 = ɵngcc0.ɵɵgetCurrentView();\n\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NgSelectComponent_Template_div_mousedown_0_listener($event) {\n          return ctx.handleMousedown($event);\n        });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, NgSelectComponent_ng_container_4_Template, 2, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(5, NgSelectComponent_5_Template, 1, 5, null, 3);\n        ɵngcc0.ɵɵelementStart(6, \"div\", 4)(7, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"input\", function NgSelectComponent_Template_input_input_7_listener() {\n          ɵngcc0.ɵɵrestoreView(_r52);\n\n          const _r2 = ɵngcc0.ɵɵreference(8);\n\n          return ctx.filter(_r2.value);\n        })(\"compositionstart\", function NgSelectComponent_Template_input_compositionstart_7_listener() {\n          return ctx.onCompositionStart();\n        })(\"compositionend\", function NgSelectComponent_Template_input_compositionend_7_listener() {\n          ɵngcc0.ɵɵrestoreView(_r52);\n\n          const _r2 = ɵngcc0.ɵɵreference(8);\n\n          return ctx.onCompositionEnd(_r2.value);\n        })(\"focus\", function NgSelectComponent_Template_input_focus_7_listener($event) {\n          return ctx.onInputFocus($event);\n        })(\"blur\", function NgSelectComponent_Template_input_blur_7_listener($event) {\n          return ctx.onInputBlur($event);\n        })(\"change\", function NgSelectComponent_Template_input_change_7_listener($event) {\n          return $event.stopPropagation();\n        });\n        ɵngcc0.ɵɵelementEnd()()();\n        ɵngcc0.ɵɵtemplate(9, NgSelectComponent_ng_container_9_Template, 4, 1, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(10, NgSelectComponent_span_10_Template, 3, 1, \"span\", 7);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 8);\n        ɵngcc0.ɵɵelement(12, \"span\", 9);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵtemplate(13, NgSelectComponent_ng_dropdown_panel_13_Template, 7, 19, \"ng-dropdown-panel\", 10);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-appearance-outline\", ctx.appearance === \"outline\")(\"ng-has-value\", ctx.hasValue);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.placeholder);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.multiLabelTemplate && ctx.selectedItems.length > 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiLabelTemplate && ctx.selectedValues.length > 0);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"readOnly\", !ctx.searchable || ctx.itemsList.maxItemsSelected)(\"disabled\", ctx.disabled)(\"value\", ctx.searchTerm ? ctx.searchTerm : \"\");\n        ɵngcc0.ɵɵattribute(\"id\", ctx.labelForId)(\"tabindex\", ctx.tabIndex)(\"aria-expanded\", ctx.isOpen)(\"aria-owns\", ctx.isOpen ? ctx.dropdownId : null)(\"aria-activedescendant\", ctx.isOpen ? ctx.itemsList == null ? null : ctx.itemsList.markedItem == null ? null : ctx.itemsList.markedItem.htmlId : null);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showClear());\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, NgItemLabelDirective, ɵngcc1.NgTemplateOutlet, NgDropdownPanelComponent, ɵngcc1.NgClass],\n    styles: [\".ng-select{display:block;position:relative}.ng-select,.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:default;user-select:none}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{cursor:default;display:flex;outline:none;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:flex;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{background:none transparent;border:0;box-shadow:none;box-sizing:content-box;cursor:default;outline:none;padding:0;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;padding:0;user-select:none;width:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{left:0;position:absolute;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{z-index:1}.ng-select .ng-clear-wrapper{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;position:relative;user-select:none;width:17px}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{-webkit-animation:load8 .8s linear infinite;animation:load8 .8s linear infinite;border:2px solid rgba(66,66,66,.2);border-left-color:#424242;border-radius:50%;font-size:10px;height:17px;margin-right:5px;position:relative;text-indent:-9999em;transform:translateZ(0);width:17px}.ng-select .ng-spinner-loader:after{border-radius:50%;height:17px;width:17px}@-webkit-keyframes load8{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes load8{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.ng-select .ng-arrow-wrapper{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;position:relative;text-align:center;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{display:inline-block;height:0;pointer-events:none;position:relative;width:0}.ng-dropdown-panel{-webkit-overflow-scrolling:touch;box-sizing:border-box;opacity:0;position:absolute;width:100%;z-index:1050}.ng-dropdown-panel .ng-dropdown-panel-items{box-sizing:border-box;display:block;height:auto;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup,.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{-webkit-overflow-scrolling:touch;display:block;overflow:hidden;overflow-y:auto;position:relative}.ng-dropdown-panel .scrollable-content{height:100%;left:0;position:absolute;top:0;width:100%}.ng-dropdown-panel .total-padding{opacity:0;width:1px}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n\n  return NgSelectComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgSelectComponent.prototype.bindLabel;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.bindValue;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.markFirst;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.placeholder;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.notFoundText;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.typeToSearchText;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.addTagText;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.loadingText;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.clearAllText;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.appearance;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.dropdownPosition;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.appendTo;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.loading;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.closeOnSelect;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.hideSelected;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.selectOnTab;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.openOnEnter;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.maxSelectedItems;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.groupBy;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.groupValue;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.bufferAmount;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.virtualScroll;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.selectableGroup;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.selectableGroupAsModel;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.searchFn;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.trackByFn;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.clearOnBackspace;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.labelForId;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.inputAttrs;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.tabIndex;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.readonly;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.searchWhileComposing;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.minTermLength;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.editableSearchTerm;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.keyDownFn;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.typeahead;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.multiple;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.addTag;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.searchable;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.clearable;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.isOpen;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.blurEvent;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.focusEvent;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.changeEvent;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.openEvent;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.closeEvent;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.searchEvent;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.clearEvent;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.addEvent;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.removeEvent;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.scroll;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.scrollToEnd;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.optionTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.optgroupTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.labelTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.multiLabelTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.headerTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.footerTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.notFoundTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.typeToSearchTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.loadingTextTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.tagTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.loadingSpinnerTemplate;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.dropdownPanel;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.searchInput;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.ngOptions;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.itemsList;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.viewPortItems;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.searchTerm;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.dropdownId;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.element;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.focused;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.escapeHTML;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.useDefaultClass;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._items;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._itemsAreUsed;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._defaultLabel;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._primitive;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._manualOpen;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._disabled;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._pressedKeys;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._compareWith;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._clearSearchOnAdd;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._isComposing;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._destroy$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._keyPress$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._onChange;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._onTouched;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.clearItem;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.trackByOption;\n  /** @type {?} */\n\n  NgSelectComponent.prototype.classes;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype.autoFocus;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._cd;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgSelectComponent.prototype._console;\n  /* Skipping unhandled member: ;*/\n\n  /* Skipping unhandled member: ;*/\n\n  /* Skipping unhandled member: ;*/\n\n  /* Skipping unhandled member: ;*/\n\n  /* Skipping unhandled member: ;*/\n\n  /* Skipping unhandled member: ;*/\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction DefaultSelectionModelFactory() {\n  return new DefaultSelectionModel();\n}\n/**\n * @record\n */\n\n\nfunction SelectionModel() {}\n\nif (false) {\n  /** @type {?} */\n  SelectionModel.prototype.value;\n  /**\n   * @param {?} item\n   * @param {?} multiple\n   * @param {?} selectableGroupAsModel\n   * @return {?}\n   */\n\n  SelectionModel.prototype.select = function (item, multiple, selectableGroupAsModel) {};\n  /**\n   * @param {?} item\n   * @param {?} multiple\n   * @return {?}\n   */\n\n\n  SelectionModel.prototype.unselect = function (item, multiple) {};\n  /**\n   * @param {?} keepDisabled\n   * @return {?}\n   */\n\n\n  SelectionModel.prototype.clear = function (keepDisabled) {};\n}\n\nclass DefaultSelectionModel {\n  constructor() {\n    this._selected = [];\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get value() {\n    return this._selected;\n  }\n  /**\n   * @param {?} item\n   * @param {?} multiple\n   * @param {?} groupAsModel\n   * @return {?}\n   */\n\n\n  select(item, multiple, groupAsModel) {\n    item.selected = true;\n\n    if (!item.children || !multiple && groupAsModel) {\n      this._selected.push(item);\n    }\n\n    if (multiple) {\n      if (item.parent) {\n        /** @type {?} */\n        const childrenCount = item.parent.children.length;\n        /** @type {?} */\n\n        const selectedCount = item.parent.children.filter(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        x => x.selected).length;\n        item.parent.selected = childrenCount === selectedCount;\n      } else if (item.children) {\n        this._setChildrenSelectedState(item.children, true);\n\n        this._removeChildren(item);\n\n        if (groupAsModel && this._activeChildren(item)) {\n          this._selected = [...this._selected.filter(\n          /**\n          * @param {?} x\n          * @return {?}\n          */\n          x => x.parent !== item), item];\n        } else {\n          this._selected = [...this._selected, ...item.children.filter(\n          /**\n          * @param {?} x\n          * @return {?}\n          */\n          x => !x.disabled)];\n        }\n      }\n    }\n  }\n  /**\n   * @param {?} item\n   * @param {?} multiple\n   * @return {?}\n   */\n\n\n  unselect(item, multiple) {\n    this._selected = this._selected.filter(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    x => x !== item);\n    item.selected = false;\n\n    if (multiple) {\n      if (item.parent && item.parent.selected) {\n        /** @type {?} */\n        const children = item.parent.children;\n\n        this._removeParent(item.parent);\n\n        this._removeChildren(item.parent);\n\n        this._selected.push(...children.filter(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        x => x !== item && !x.disabled));\n\n        item.parent.selected = false;\n      } else if (item.children) {\n        this._setChildrenSelectedState(item.children, false);\n\n        this._removeChildren(item);\n      }\n    }\n  }\n  /**\n   * @param {?} keepDisabled\n   * @return {?}\n   */\n\n\n  clear(keepDisabled) {\n    this._selected = keepDisabled ? this._selected.filter(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    x => x.disabled) : [];\n  }\n  /**\n   * @private\n   * @param {?} children\n   * @param {?} selected\n   * @return {?}\n   */\n\n\n  _setChildrenSelectedState(children, selected) {\n    for (const child of children) {\n      if (child.disabled) {\n        continue;\n      }\n\n      child.selected = selected;\n    }\n\n    ;\n  }\n  /**\n   * @private\n   * @param {?} parent\n   * @return {?}\n   */\n\n\n  _removeChildren(parent) {\n    this._selected = [...this._selected.filter(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    x => x.parent !== parent), ...parent.children.filter(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    x => x.parent === parent && x.disabled && x.selected)];\n  }\n  /**\n   * @private\n   * @param {?} parent\n   * @return {?}\n   */\n\n\n  _removeParent(parent) {\n    this._selected = this._selected.filter(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    x => x !== parent);\n  }\n  /**\n   * @private\n   * @param {?} item\n   * @return {?}\n   */\n\n\n  _activeChildren(item) {\n    return item.children.every(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    x => !x.disabled || x.selected);\n  }\n\n}\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  DefaultSelectionModel.prototype._selected;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ng-select.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nconst ɵ0 = DefaultSelectionModelFactory;\nlet NgSelectModule = /*#__PURE__*/(() => {\n  class NgSelectModule {}\n\n  NgSelectModule.ɵfac = function NgSelectModule_Factory(t) {\n    return new (t || NgSelectModule)();\n  };\n\n  NgSelectModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgSelectModule\n  });\n  NgSelectModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [{\n      provide: SELECTION_MODEL_FACTORY,\n      useValue: ɵ0\n    }],\n    imports: [[CommonModule]]\n  });\n  return NgSelectModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgSelectModule, {\n    declarations: function () {\n      return [NgDropdownPanelComponent, NgOptionComponent, NgSelectComponent, NgOptgroupTemplateDirective, NgOptionTemplateDirective, NgLabelTemplateDirective, NgMultiLabelTemplateDirective, NgHeaderTemplateDirective, NgFooterTemplateDirective, NgNotFoundTemplateDirective, NgTypeToSearchTemplateDirective, NgLoadingTextTemplateDirective, NgTagTemplateDirective, NgLoadingSpinnerTemplateDirective, NgItemLabelDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgSelectComponent, NgOptionComponent, NgOptgroupTemplateDirective, NgOptionTemplateDirective, NgLabelTemplateDirective, NgMultiLabelTemplateDirective, NgHeaderTemplateDirective, NgFooterTemplateDirective, NgNotFoundTemplateDirective, NgTypeToSearchTemplateDirective, NgLoadingTextTemplateDirective, NgTagTemplateDirective, NgLoadingSpinnerTemplateDirective];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-select-ng-select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NgSelectComponent, NgSelectConfig, NgSelectModule, SELECTION_MODEL_FACTORY, DefaultSelectionModelFactory as ɵb, DefaultSelectionModel as ɵc, NgDropdownPanelService as ɵd, NgItemLabelDirective as ɵe, NgOptionTemplateDirective as ɵf, NgOptgroupTemplateDirective as ɵg, NgLabelTemplateDirective as ɵh, NgMultiLabelTemplateDirective as ɵi, NgHeaderTemplateDirective as ɵj, NgFooterTemplateDirective as ɵk, NgNotFoundTemplateDirective as ɵl, NgTypeToSearchTemplateDirective as ɵm, NgLoadingTextTemplateDirective as ɵn, NgTagTemplateDirective as ɵo, NgLoadingSpinnerTemplateDirective as ɵp, NgDropdownPanelComponent as ɵq, NgOptionComponent as ɵr, ConsoleService as ɵs }; //# sourceMappingURL=ng-select-ng-select.js.map","map":null,"metadata":{},"sourceType":"module"}