{"ast":null,"code":"import { Injectable, ɵɵdefineInjectable, Component, ElementRef, KeyValueDiffers, Input, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"*\"];\n\nclass MaphilightService {\n  constructor() {}\n\n}\n\nMaphilightService.ɵfac = function MaphilightService_Factory(t) {\n  return new (t || MaphilightService)();\n};\n\nMaphilightService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: MaphilightService,\n  factory: MaphilightService.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\n/** @nocollapse */\nMaphilightService.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function MaphilightService_Factory() {\n    return new MaphilightService();\n  },\n  token: MaphilightService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet MaphilightComponent = /*#__PURE__*/(() => {\n  class MaphilightComponent {\n    /**\n     * @param {?} elRef\n     * @param {?} differs\n     */\n    constructor(elRef, differs) {\n      this.elRef = elRef;\n      this.events = {\n        imgLoaded: new Subject(),\n        updateMaphilight: new Subject()\n      };\n      this.el = this.elRef.nativeElement;\n      this.configDiffer = differs.find({}).create();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterViewInit() {\n      this.img = this.el.querySelector('img');\n      this.map = this.el.querySelector('map');\n      /** @type {?} */\n\n      const id = this.el.getAttribute('id');\n      this.img.setAttribute('usemap', '#' + id + \".map\");\n      this.map.setAttribute('id', id + \".map\");\n      this.map.setAttribute('name', id + \".map\"); // Wait until image is loaded. Otherwise the $(img).height() in maphilight.js may return 0,\n      // which causes mouseover effect to break.\n      // See also  https://stackoverflow.com/questions/16084374/jquery-width-and-height-return-0-for-img-element\n\n      this.img.onload =\n      /**\n      * @return {?}\n      */\n      () => {\n        this.events.imgLoaded.next();\n        this.updateMaphilight();\n      };\n    }\n    /**\n     * @return {?}\n     */\n\n\n    updateMaphilight() {\n      if (!this.img) return;\n      this.events.updateMaphilight.next();\n      window.jQuery(this.img).maphilight(this.configToApply());\n    }\n\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n      /** @type {?} */\n      const changes = this.configDiffer.diff(this.config);\n\n      if (changes) {\n        this.updateMaphilight();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    configToApply() {\n      /** @type {?} */\n      const config = Object.assign({}, this.config);\n      if (config.strokeColor && config.strokeColor[0] == '#') config.strokeColor = config.strokeColor.substr(1);\n      if (config.fillColor && config.fillColor[0] == '#') config.fillColor = config.fillColor.substr(1);\n      if (config.shadowColor && config.shadowColor[0] == '#') config.shadowColor = config.shadowColor.substr(1);\n      return config;\n    }\n\n  }\n\n  MaphilightComponent.ɵfac = function MaphilightComponent_Factory(t) {\n    return new (t || MaphilightComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers));\n  };\n\n  MaphilightComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MaphilightComponent,\n    selectors: [[\"maphilight\"]],\n    inputs: {\n      config: \"config\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MaphilightComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [\"\"]\n  });\n  /** @nocollapse */\n\n  return MaphilightComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet MaphilightModule = /*#__PURE__*/(() => {\n  class MaphilightModule {}\n\n  MaphilightModule.ɵfac = function MaphilightModule_Factory(t) {\n    return new (t || MaphilightModule)();\n  };\n\n  MaphilightModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MaphilightModule\n  });\n  MaphilightModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return MaphilightModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MaphilightModule, {\n    declarations: function () {\n      return [MaphilightComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [MaphilightComponent];\n    }\n  });\n})();\n\nexport { MaphilightComponent, MaphilightModule, MaphilightService }; //# sourceMappingURL=ng-maphilight.js.map","map":null,"metadata":{},"sourceType":"module"}