{"ast":null,"code":"import { SearchService } from '../search.service';\nimport { GoogleAnalyticsService } from '../google-analytics.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../google-analytics.service\";\nimport * as i2 from \"../search.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ng-select/ng-select\";\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nfunction SearchNavComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"ng-select\", 11);\n    i0.ɵɵlistener(\"change\", function SearchNavComponent_div_5_Template_ng_select_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onTopicsChange($event.value);\n    })(\"ngModelChange\", function SearchNavComponent_div_5_Template_ng_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.selectedTopic = $event;\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"items\", ctx_r0.topics)(\"ngModel\", ctx_r0.selectedTopic)(\"ngModelOptions\", i0.ɵɵpureFunction0(3, _c0));\n  }\n}\n\nfunction SearchNavComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"ng-select\", 12);\n    i0.ɵɵlistener(\"change\", function SearchNavComponent_div_8_Template_ng_select_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onOrgsChange($event.value);\n    })(\"ngModelChange\", function SearchNavComponent_div_8_Template_ng_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.selectedOrgs = $event;\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx_r1.orgs)(\"ngModel\", ctx_r1.selectedOrgs)(\"ngModelOptions\", i0.ɵɵpureFunction0(4, _c0));\n  }\n}\n\nfunction SearchNavComponent_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function SearchNavComponent_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.resetQuery();\n    });\n    i0.ɵɵtext(1, \"Reset Query\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SearchNavComponent_div_13_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function SearchNavComponent_div_13_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.resetFilters();\n    });\n    i0.ɵɵtext(1, \"Reset Filters\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SearchNavComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h4\");\n    i0.ɵɵtext(2, \"Filters\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3)(4, \"ng-select\", 15, 16);\n    i0.ɵɵlistener(\"change\", function SearchNavComponent_div_13_Template_ng_select_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.onOrgSourceChange($event.label);\n    })(\"ngModelChange\", function SearchNavComponent_div_13_Template_ng_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.filteredOrg = $event;\n    })(\"deselected\", function SearchNavComponent_div_13_Template_ng_select_deselected_4_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.onOrgSourceChange($event.label);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 3)(7, \"ng-select\", 17, 18);\n    i0.ɵɵlistener(\"change\", function SearchNavComponent_div_13_Template_ng_select_change_7_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.onTypeSourceChange($event.label);\n    })(\"ngModelChange\", function SearchNavComponent_div_13_Template_ng_select_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.filteredType = $event;\n    })(\"deselected\", function SearchNavComponent_div_13_Template_ng_select_deselected_7_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.onTypeSourceChange($event.label);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 3)(10, \"ng-select\", 19, 20);\n    i0.ɵɵlistener(\"change\", function SearchNavComponent_div_13_Template_ng_select_change_10_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.onFYSourceChange($event.label);\n    })(\"ngModelChange\", function SearchNavComponent_div_13_Template_ng_select_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.filteredFY = $event;\n    })(\"deselected\", function SearchNavComponent_div_13_Template_ng_select_deselected_10_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.onFYSourceChange($event.label);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 3)(13, \"ng-select\", 21, 22);\n    i0.ɵɵlistener(\"change\", function SearchNavComponent_div_13_Template_ng_select_change_13_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.onStatusSourceChange($event.label);\n    })(\"ngModelChange\", function SearchNavComponent_div_13_Template_ng_select_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.filteredStatus = $event;\n    })(\"deselected\", function SearchNavComponent_div_13_Template_ng_select_deselected_13_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.onStatusSourceChange($event.label);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 23);\n    i0.ɵɵtemplate(16, SearchNavComponent_div_13_button_16_Template, 2, 0, \"button\", 24);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx_r3.resultOrgs)(\"ngModel\", ctx_r3.filteredOrg)(\"label\", ctx_r3.Organizations);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx_r3.resultTypes)(\"ngModel\", ctx_r3.filteredType)(\"label\", ctx_r3.Types);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx_r3.resultFY)(\"ngModel\", ctx_r3.filteredFY)(\"label\", ctx_r3.FiscalYears);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx_r3.resultStatus)(\"ngModel\", ctx_r3.filteredStatus)(\"label\", ctx_r3.Statuses);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showResetFilters);\n  }\n}\n\nexport let SearchNavComponent = /*#__PURE__*/(() => {\n  class SearchNavComponent {\n    constructor(googleAnalyticsService, searchService) {\n      this.googleAnalyticsService = googleAnalyticsService;\n      this.searchService = searchService;\n      this.searchQuery = null;\n      this.selectedTopic = null;\n      this.selectedSubtopic = [null];\n      this.selectedOrg = null;\n      this.selectedOrgs = [];\n      this.selectedSubtopics = [];\n      this.topics = [];\n      this.subtopics = [];\n      this.orgs = [];\n      this.showReset = false;\n      this.showResetFilters = false;\n      this.multipleOrgs = true;\n      this.resultOrgs = [];\n      this.resultFY = [];\n      this.resultTypes = [];\n      this.resultStatus = [];\n      this.filteredOrg = [];\n      this.filteredFY = [];\n      this.filteredType = [];\n      this.filteredStatus = [];\n      this.orgsLoaded = false;\n      this.topicsLoaded = false;\n    }\n\n    resetQuery() {\n      this.selectedSubtopics = [];\n      this.selectedTopic = null;\n      this.selectedOrgs = [];\n      this.searchQuery = '';\n      this.searchService.wipeQuery();\n      this.subtopics = [];\n    }\n\n    onQueryChange(query) {\n      this.showReset = true;\n    }\n\n    onTopicsChange(event) {\n      var topic = this.topics[event];\n      this.subtopics = topic['subtopics'];\n      this.googleAnalyticsService.eventEmitter(\"Topic Change: \" + topic['label'], \"search\");\n      this.showReset = true;\n    }\n\n    onSubtopicsChange(event) {\n      this.selectedSubtopics.forEach(subtopic => {\n        this.googleAnalyticsService.eventEmitter(\"Subtopic Change: \" + subtopic['label'], \"search\");\n      });\n      this.showReset = true;\n    }\n\n    onOrgsChange(event) {\n      this.selectedOrgs.forEach(org => {\n        this.googleAnalyticsService.eventEmitter(\"Organization Change: \" + org['label'], \"search\");\n      });\n      this.showReset = true;\n    }\n\n    onOrgSourceChange(orgSource) {\n      this.filteredOrg.forEach(org => {\n        this.googleAnalyticsService.eventEmitter(\"Filter Organization Results: \" + org['label'], \"search\");\n      });\n      this.searchService.updateOrgItems(this.filteredOrg);\n      this.showResetFilters = true;\n    }\n\n    onTypeSourceChange(typeSource) {\n      this.filteredType.forEach(type => {\n        this.googleAnalyticsService.eventEmitter(\"Filter Data Type Results: \" + type['label'], \"search\");\n      });\n      this.searchService.updateTypeItems(this.filteredType);\n      this.showResetFilters = true;\n    }\n\n    onStatusSourceChange(statusSource) {\n      this.filteredStatus.forEach(status => {\n        this.googleAnalyticsService.eventEmitter(\"Filter Project Status Results: \" + status['label'], \"search\");\n      });\n      this.searchService.updateStatusItems(this.filteredStatus);\n      this.showResetFilters = true;\n    }\n\n    onFYSourceChange(fySource) {\n      this.filteredFY.forEach(fy => {\n        this.googleAnalyticsService.eventEmitter(\"Filter Fiscal Year Results: \" + fy['label'], \"search\");\n      });\n      this.searchService.updateFYItems(this.filteredFY);\n      this.showResetFilters = true;\n    }\n\n    updateFilters() {\n      this.filteredOrg = [];\n      this.filteredFY = [];\n      this.filteredType = [];\n      this.filteredStatus = [];\n    }\n\n    resetFilters() {\n      this.showResetFilters = false;\n      this.updateFilters();\n      this.searchService.resetFilters();\n    }\n\n    onSubmit() {\n      // Wipe previous query on new search\n      this.searchService.wipeQuery();\n      var queryString = '';\n      var query = '?query=';\n      var subtopics = '&subtopics=';\n      var gaSubtopics = \"\",\n          gaTopic = \"\",\n          gaOrgs = \"\",\n          gaQuery = \"\";\n      this.showReset = true;\n\n      if (this.selectedSubtopics.length > 0 && this.selectedSubtopics[0] != null) {\n        for (var st of this.selectedSubtopics) {\n          subtopics = subtopics + encodeURIComponent(st['label']) + ',';\n          gaSubtopics = gaSubtopics + st['label'] + ',';\n        }\n\n        subtopics = subtopics.substring(0, subtopics.length - 1);\n        gaSubtopics = gaSubtopics.substring(0, gaSubtopics.length - 1);\n      }\n\n      var topic = '&topics=';\n\n      if (this.selectedTopic != null) {\n        topic = topic + encodeURIComponent(this.selectedTopic['label']);\n        gaTopic = gaTopic + this.selectedTopic['label'];\n      }\n\n      var organizations = '&organizations=';\n\n      if (this.selectedOrgs.length > 0 && this.selectedOrgs[0] != null) {\n        for (var org of this.selectedOrgs) {\n          organizations = organizations + encodeURIComponent(org.label) + ',';\n          gaOrgs = gaOrgs + org.label + ',';\n        }\n\n        organizations = organizations.substring(0, organizations.length - 1);\n        gaOrgs = gaOrgs.substring(0, gaOrgs.length - 1);\n      }\n\n      if (this.searchQuery && this.searchQuery.length > 0) {\n        query = query + encodeURIComponent(this.searchQuery);\n      }\n\n      var submission = \"Search Submission - Query: \" + this.searchQuery + \" Topic: \" + gaTopic + \" Subtopics: \" + gaSubtopics + \" Organizations: \" + gaOrgs;\n      this.googleAnalyticsService.eventEmitter(submission, \"engagement\");\n      queryString = query + topic + subtopics + organizations;\n      this.searchService.searchProjects(queryString).subscribe(results => {\n        this.updateFilters();\n      });\n    }\n\n    ngOnInit() {\n      this.resetQuery();\n      this.searchService.getTopics().subscribe(topics => {\n        this.topics = [];\n        topics.forEach(topic => {\n          this.topics[topic.value] = {\n            value: topic.value,\n            label: topic.label,\n            subtopics: topic.subtopics\n          };\n        });\n        this.topicsLoaded = true;\n      });\n      this.searchService.getOrganizations().subscribe(organizations => {\n        this.orgs = organizations;\n        this.orgsLoaded = true;\n      });\n      this.totalResultsSubscription = this.searchService.totalItem$.subscribe(totalItems => {\n        this.totalResults = totalItems;\n      });\n      this.resultOrgsSubscription = this.searchService.resultOrg$.subscribe(resultOrgs => {\n        this.resultOrgs = resultOrgs;\n      });\n      this.resultFYSubscription = this.searchService.resultFY$.subscribe(resultFY => {\n        this.resultFY = resultFY;\n      });\n      this.resultTypesSubscription = this.searchService.resultType$.subscribe(resultTypes => {\n        this.resultTypes = resultTypes;\n      });\n      this.resultStatusSubscription = this.searchService.resultStatus$.subscribe(resultStatus => {\n        this.resultStatus = resultStatus;\n      });\n      this.updateFilters();\n      this.searchService.resetFilters();\n    }\n\n  }\n\n  SearchNavComponent.ɵfac = function SearchNavComponent_Factory(t) {\n    return new (t || SearchNavComponent)(i0.ɵɵdirectiveInject(i1.GoogleAnalyticsService), i0.ɵɵdirectiveInject(i2.SearchService));\n  };\n\n  SearchNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchNavComponent,\n    selectors: [[\"search-nav\"]],\n    decls: 14,\n    vars: 10,\n    consts: [[1, \"search\"], [1, \"search-nav\"], [1, \"ui\", \"form\"], [1, \"field\"], [\"type\", \"text\", \"id\", \"queryTerms\", \"value\", \"searchQuery\", \"placeholder\", \"Enter search terms\\u2026\", \"name\", \"queryTerms\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"field\", 4, \"ngIf\"], [\"placeholder\", \"Subtopics\", 3, \"multiple\", \"items\", \"ngModel\", \"ngModelOptions\", \"change\", \"ngModelChange\"], [1, \"float-right\", \"buttons\"], [1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"click\"], [\"class\", \"btn btn-sm btn-warning\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"filters\", 4, \"ngIf\"], [\"placeholder\", \"Topic\", 3, \"items\", \"ngModel\", \"ngModelOptions\", \"change\", \"ngModelChange\"], [\"placeholder\", \"CASCs  \", 3, \"multiple\", \"items\", \"ngModel\", \"ngModelOptions\", \"change\", \"ngModelChange\"], [1, \"btn\", \"btn-sm\", \"btn-warning\", 3, \"click\"], [1, \"filters\"], [\"placeholder\", \"All Organizations\", 3, \"multiple\", \"items\", \"ngModel\", \"label\", \"change\", \"ngModelChange\", \"deselected\"], [\"orgs\", \"\"], [\"placeholder\", \"Project Type\", 3, \"multiple\", \"items\", \"ngModel\", \"label\", \"change\", \"ngModelChange\", \"deselected\"], [\"types\", \"\"], [\"placeholder\", \"All Years\", 3, \"multiple\", \"items\", \"ngModel\", \"label\", \"change\", \"ngModelChange\", \"deselected\"], [\"fy\", \"\"], [\"placeholder\", \"All Statuses\", 3, \"multiple\", \"items\", \"ngModel\", \"label\", \"change\", \"ngModelChange\", \"deselected\"], [\"statuses\", \"\"], [1, \"clearfix\", 2, \"width\", \"100%\"], [\"class\", \"btn btn-sm btn-warning float-right\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-warning\", \"float-right\", 3, \"click\"]],\n    template: function SearchNavComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 3)(4, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function SearchNavComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.searchQuery = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, SearchNavComponent_div_5_Template, 2, 4, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"ng-select\", 6);\n        i0.ɵɵlistener(\"change\", function SearchNavComponent_Template_ng_select_change_7_listener($event) {\n          return ctx.onSubtopicsChange($event.value);\n        })(\"ngModelChange\", function SearchNavComponent_Template_ng_select_ngModelChange_7_listener($event) {\n          return ctx.selectedSubtopics = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(8, SearchNavComponent_div_8_Template, 2, 5, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function SearchNavComponent_Template_button_click_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(11, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, SearchNavComponent_button_12_Template, 2, 0, \"button\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(13, SearchNavComponent_div_13_Template, 17, 17, \"div\", 10);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchQuery);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.topicsLoaded);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx.subtopics)(\"ngModel\", ctx.selectedSubtopics)(\"ngModelOptions\", i0.ɵɵpureFunction0(9, _c0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.orgsLoaded);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showReset);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.totalResults > 0);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.NgIf, i5.NgSelectComponent],\n    styles: [\".search-nav[_ngcontent-%COMP%]{margin-top:.35rem}.search-nav[_ngcontent-%COMP%]   .field[_ngcontent-%COMP%]{margin-bottom:1rem}.search-nav[_ngcontent-%COMP%]   .field[_ngcontent-%COMP%]   input#queryTerms[_ngcontent-%COMP%]{padding:.5rem;width:100%;border:1px solid #87845e;border-radius:.25rem;margin-top:0;box-shadow:0 0 .5rem #e2d95180}.search-nav[_ngcontent-%COMP%]   .field[_ngcontent-%COMP%]   input#queryTerms[_ngcontent-%COMP%]::-moz-placeholder{color:#666;font-style:italic;opacity:1}.search-nav[_ngcontent-%COMP%]   .field[_ngcontent-%COMP%]   input#queryTerms[_ngcontent-%COMP%]::placeholder{color:#666;font-style:italic;opacity:1}.search-nav[_ngcontent-%COMP%]   .buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-left:.75rem}.search-nav[_ngcontent-%COMP%]   .buttons[_ngcontent-%COMP%]   button.btn-success[_ngcontent-%COMP%]{background-color:#227f38;border-color:#227f38}.filters[_ngcontent-%COMP%]{clear:both;padding-top:2rem}.filters[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-size:1.2rem}.filters[_ngcontent-%COMP%]   .field[_ngcontent-%COMP%]{margin-bottom:1rem}[_nghost-%COMP%]  .ng-select .ng-select-container{height:2.2rem}[_nghost-%COMP%]  .ng-select .ng-select-container .ng-value-container .ng-placeholder{color:#666!important}\"]\n  });\n  return SearchNavComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}